/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.jivesoftware.community.cloudalytics.event.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroActorRelation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1235259917559525605L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroActorRelation\",\"namespace\":\"com.jivesoftware.community.cloudalytics.event.avro\",\"fields\":[{\"name\":\"user\",\"type\":{\"type\":\"record\",\"name\":\"AvroActor\",\"fields\":[{\"name\":\"class\",\"type\":{\"type\":\"string\",\"order\":\"ignore\"}},{\"name\":\"objectType\",\"type\":\"string\"},{\"name\":\"objectId\",\"type\":\"long\"},{\"name\":\"objectHash\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"isDataAvailable\",\"type\":\"boolean\"},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"extras\",\"type\":{\"type\":\"map\",\"values\":[\"string\",\"boolean\",\"long\"]}},{\"name\":\"profile\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"email\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"creationDate\",\"type\":\"long\"},{\"name\":\"modificationDate\",\"type\":\"long\"},{\"name\":\"enabled\",\"type\":\"boolean\"},{\"name\":\"lastLoggedIn\",\"type\":\"long\"},{\"name\":\"lastProfileUpdate\",\"type\":\"long\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"federated\",\"type\":\"boolean\"},{\"name\":\"visible\",\"type\":\"boolean\"},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"order\":\"ignore\"}},{\"name\":\"relatedUser\",\"type\":\"AvroActor\"},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"graphType\",\"type\":\"string\"},{\"name\":\"relation\",\"type\":\"string\"},{\"name\":\"creationDate\",\"type\":\"long\"},{\"name\":\"retiredDate\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.jivesoftware.community.cloudalytics.event.avro.AvroActor user;
  @Deprecated public com.jivesoftware.community.cloudalytics.event.avro.AvroActor relatedUser;
  @Deprecated public java.lang.CharSequence status;
  @Deprecated public java.lang.CharSequence graphType;
  @Deprecated public java.lang.CharSequence relation;
  @Deprecated public long creationDate;
  @Deprecated public long retiredDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AvroActorRelation() {}

  /**
   * All-args constructor.
   */
  public AvroActorRelation(com.jivesoftware.community.cloudalytics.event.avro.AvroActor user, com.jivesoftware.community.cloudalytics.event.avro.AvroActor relatedUser, java.lang.CharSequence status, java.lang.CharSequence graphType, java.lang.CharSequence relation, java.lang.Long creationDate, java.lang.Long retiredDate) {
    this.user = user;
    this.relatedUser = relatedUser;
    this.status = status;
    this.graphType = graphType;
    this.relation = relation;
    this.creationDate = creationDate;
    this.retiredDate = retiredDate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return user;
    case 1: return relatedUser;
    case 2: return status;
    case 3: return graphType;
    case 4: return relation;
    case 5: return creationDate;
    case 6: return retiredDate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: user = (com.jivesoftware.community.cloudalytics.event.avro.AvroActor)value$; break;
    case 1: relatedUser = (com.jivesoftware.community.cloudalytics.event.avro.AvroActor)value$; break;
    case 2: status = (java.lang.CharSequence)value$; break;
    case 3: graphType = (java.lang.CharSequence)value$; break;
    case 4: relation = (java.lang.CharSequence)value$; break;
    case 5: creationDate = (java.lang.Long)value$; break;
    case 6: retiredDate = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'user' field.
   */
  public com.jivesoftware.community.cloudalytics.event.avro.AvroActor getUser() {
    return user;
  }

  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(com.jivesoftware.community.cloudalytics.event.avro.AvroActor value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'relatedUser' field.
   */
  public com.jivesoftware.community.cloudalytics.event.avro.AvroActor getRelatedUser() {
    return relatedUser;
  }

  /**
   * Sets the value of the 'relatedUser' field.
   * @param value the value to set.
   */
  public void setRelatedUser(com.jivesoftware.community.cloudalytics.event.avro.AvroActor value) {
    this.relatedUser = value;
  }

  /**
   * Gets the value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'graphType' field.
   */
  public java.lang.CharSequence getGraphType() {
    return graphType;
  }

  /**
   * Sets the value of the 'graphType' field.
   * @param value the value to set.
   */
  public void setGraphType(java.lang.CharSequence value) {
    this.graphType = value;
  }

  /**
   * Gets the value of the 'relation' field.
   */
  public java.lang.CharSequence getRelation() {
    return relation;
  }

  /**
   * Sets the value of the 'relation' field.
   * @param value the value to set.
   */
  public void setRelation(java.lang.CharSequence value) {
    this.relation = value;
  }

  /**
   * Gets the value of the 'creationDate' field.
   */
  public java.lang.Long getCreationDate() {
    return creationDate;
  }

  /**
   * Sets the value of the 'creationDate' field.
   * @param value the value to set.
   */
  public void setCreationDate(java.lang.Long value) {
    this.creationDate = value;
  }

  /**
   * Gets the value of the 'retiredDate' field.
   */
  public java.lang.Long getRetiredDate() {
    return retiredDate;
  }

  /**
   * Sets the value of the 'retiredDate' field.
   * @param value the value to set.
   */
  public void setRetiredDate(java.lang.Long value) {
    this.retiredDate = value;
  }

  /**
   * Creates a new AvroActorRelation RecordBuilder.
   * @return A new AvroActorRelation RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder newBuilder() {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder();
  }
  
  /**
   * Creates a new AvroActorRelation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroActorRelation RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder newBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder other) {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder(other);
  }
  
  /**
   * Creates a new AvroActorRelation RecordBuilder by copying an existing AvroActorRelation instance.
   * @param other The existing instance to copy.
   * @return A new AvroActorRelation RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder newBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation other) {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder(other);
  }
  
  /**
   * RecordBuilder for AvroActorRelation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroActorRelation>
    implements org.apache.avro.data.RecordBuilder<AvroActorRelation> {

    private com.jivesoftware.community.cloudalytics.event.avro.AvroActor user;
    private com.jivesoftware.community.cloudalytics.event.avro.AvroActor.Builder userBuilder;
    private com.jivesoftware.community.cloudalytics.event.avro.AvroActor relatedUser;
    private com.jivesoftware.community.cloudalytics.event.avro.AvroActor.Builder relatedUserBuilder;
    private java.lang.CharSequence status;
    private java.lang.CharSequence graphType;
    private java.lang.CharSequence relation;
    private long creationDate;
    private long retiredDate;

    /** Creates a new Builder */
    private Builder() {
      super(com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.user)) {
        this.user = data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      if (other.hasUserBuilder()) {
        this.userBuilder = com.jivesoftware.community.cloudalytics.event.avro.AvroActor.newBuilder(other.getUserBuilder());
      }
      if (isValidValue(fields()[1], other.relatedUser)) {
        this.relatedUser = data().deepCopy(fields()[1].schema(), other.relatedUser);
        fieldSetFlags()[1] = true;
      }
      if (other.hasRelatedUserBuilder()) {
        this.relatedUserBuilder = com.jivesoftware.community.cloudalytics.event.avro.AvroActor.newBuilder(other.getRelatedUserBuilder());
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.graphType)) {
        this.graphType = data().deepCopy(fields()[3].schema(), other.graphType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.relation)) {
        this.relation = data().deepCopy(fields()[4].schema(), other.relation);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[5].schema(), other.creationDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.retiredDate)) {
        this.retiredDate = data().deepCopy(fields()[6].schema(), other.retiredDate);
        fieldSetFlags()[6] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing AvroActorRelation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation other) {
            super(com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.SCHEMA$);
      if (isValidValue(fields()[0], other.user)) {
        this.user = data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      this.userBuilder = null;
      if (isValidValue(fields()[1], other.relatedUser)) {
        this.relatedUser = data().deepCopy(fields()[1].schema(), other.relatedUser);
        fieldSetFlags()[1] = true;
      }
      this.relatedUserBuilder = null;
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.graphType)) {
        this.graphType = data().deepCopy(fields()[3].schema(), other.graphType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.relation)) {
        this.relation = data().deepCopy(fields()[4].schema(), other.relation);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[5].schema(), other.creationDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.retiredDate)) {
        this.retiredDate = data().deepCopy(fields()[6].schema(), other.retiredDate);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'user' field.
      * @return The value.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActor getUser() {
      return user;
    }

    /**
      * Sets the value of the 'user' field.
      * @param value The value of 'user'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setUser(com.jivesoftware.community.cloudalytics.event.avro.AvroActor value) {
      validate(fields()[0], value);
      this.userBuilder = null;
      this.user = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'user' field has been set.
      * @return True if the 'user' field has been set, false otherwise.
      */
    public boolean hasUser() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'user' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActor.Builder getUserBuilder() {
      if (userBuilder == null) {
        if (hasUser()) {
          setUserBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroActor.newBuilder(user));
        } else {
          setUserBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroActor.newBuilder());
        }
      }
      return userBuilder;
    }

    /**
     * Sets the Builder instance for the 'user' field
     * @return This builder.
     */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setUserBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroActor.Builder value) {
      clearUser();
      userBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'user' field has an active Builder instance
     * @return True if the 'user' field has an active Builder instance
     */
    public boolean hasUserBuilder() {
      return userBuilder != null;
    }

    /**
      * Clears the value of the 'user' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder clearUser() {
      user = null;
      userBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'relatedUser' field.
      * @return The value.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActor getRelatedUser() {
      return relatedUser;
    }

    /**
      * Sets the value of the 'relatedUser' field.
      * @param value The value of 'relatedUser'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setRelatedUser(com.jivesoftware.community.cloudalytics.event.avro.AvroActor value) {
      validate(fields()[1], value);
      this.relatedUserBuilder = null;
      this.relatedUser = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'relatedUser' field has been set.
      * @return True if the 'relatedUser' field has been set, false otherwise.
      */
    public boolean hasRelatedUser() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'relatedUser' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActor.Builder getRelatedUserBuilder() {
      if (relatedUserBuilder == null) {
        if (hasRelatedUser()) {
          setRelatedUserBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroActor.newBuilder(relatedUser));
        } else {
          setRelatedUserBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroActor.newBuilder());
        }
      }
      return relatedUserBuilder;
    }

    /**
     * Sets the Builder instance for the 'relatedUser' field
     * @return This builder.
     */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setRelatedUserBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroActor.Builder value) {
      clearRelatedUser();
      relatedUserBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'relatedUser' field has an active Builder instance
     * @return True if the 'relatedUser' field has an active Builder instance
     */
    public boolean hasRelatedUserBuilder() {
      return relatedUserBuilder != null;
    }

    /**
      * Clears the value of the 'relatedUser' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder clearRelatedUser() {
      relatedUser = null;
      relatedUserBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.status = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder clearStatus() {
      status = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'graphType' field.
      * @return The value.
      */
    public java.lang.CharSequence getGraphType() {
      return graphType;
    }

    /**
      * Sets the value of the 'graphType' field.
      * @param value The value of 'graphType'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setGraphType(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.graphType = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'graphType' field has been set.
      * @return True if the 'graphType' field has been set, false otherwise.
      */
    public boolean hasGraphType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'graphType' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder clearGraphType() {
      graphType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'relation' field.
      * @return The value.
      */
    public java.lang.CharSequence getRelation() {
      return relation;
    }

    /**
      * Sets the value of the 'relation' field.
      * @param value The value of 'relation'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setRelation(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.relation = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'relation' field has been set.
      * @return True if the 'relation' field has been set, false otherwise.
      */
    public boolean hasRelation() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'relation' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder clearRelation() {
      relation = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'creationDate' field.
      * @return The value.
      */
    public java.lang.Long getCreationDate() {
      return creationDate;
    }

    /**
      * Sets the value of the 'creationDate' field.
      * @param value The value of 'creationDate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setCreationDate(long value) {
      validate(fields()[5], value);
      this.creationDate = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'creationDate' field has been set.
      * @return True if the 'creationDate' field has been set, false otherwise.
      */
    public boolean hasCreationDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'creationDate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder clearCreationDate() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'retiredDate' field.
      * @return The value.
      */
    public java.lang.Long getRetiredDate() {
      return retiredDate;
    }

    /**
      * Sets the value of the 'retiredDate' field.
      * @param value The value of 'retiredDate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder setRetiredDate(long value) {
      validate(fields()[6], value);
      this.retiredDate = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'retiredDate' field has been set.
      * @return True if the 'retiredDate' field has been set, false otherwise.
      */
    public boolean hasRetiredDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'retiredDate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroActorRelation.Builder clearRetiredDate() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public AvroActorRelation build() {
      try {
        AvroActorRelation record = new AvroActorRelation();
        if (userBuilder != null) {
          record.user = this.userBuilder.build();
        } else {
          record.user = fieldSetFlags()[0] ? this.user : (com.jivesoftware.community.cloudalytics.event.avro.AvroActor) defaultValue(fields()[0]);
        }
        if (relatedUserBuilder != null) {
          record.relatedUser = this.relatedUserBuilder.build();
        } else {
          record.relatedUser = fieldSetFlags()[1] ? this.relatedUser : (com.jivesoftware.community.cloudalytics.event.avro.AvroActor) defaultValue(fields()[1]);
        }
        record.status = fieldSetFlags()[2] ? this.status : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.graphType = fieldSetFlags()[3] ? this.graphType : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.relation = fieldSetFlags()[4] ? this.relation : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.creationDate = fieldSetFlags()[5] ? this.creationDate : (java.lang.Long) defaultValue(fields()[5]);
        record.retiredDate = fieldSetFlags()[6] ? this.retiredDate : (java.lang.Long) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
