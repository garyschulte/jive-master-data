/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.jivesoftware.community.cloudalytics.schemata;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HistoricalReplayStatistics extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7840758821632445815L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HistoricalReplayStatistics\",\"namespace\":\"com.jivesoftware.community.cloudalytics.schemata\",\"fields\":[{\"name\":\"state\",\"type\":{\"type\":\"string\",\"order\":\"ignore\"}},{\"name\":\"batchSize\",\"type\":\"int\"},{\"name\":\"batchIntervalMS\",\"type\":\"int\"},{\"name\":\"runId\",\"type\":\"string\"},{\"name\":\"stage\",\"type\":\"string\"},{\"name\":\"stageNumToProcess\",\"type\":\"long\"},{\"name\":\"stageStartTime\",\"type\":\"long\"},{\"name\":\"stageEndTime\",\"type\":\"long\"},{\"name\":\"stageProcessedCount\",\"type\":\"int\"},{\"name\":\"stageSentCount\",\"type\":\"int\"},{\"name\":\"stageDroppedCount\",\"type\":\"int\"},{\"name\":\"stageErrorCount\",\"type\":\"int\"},{\"name\":\"stageUnknownCodeCount\",\"type\":\"int\"},{\"name\":\"cursor\",\"type\":\"string\"},{\"name\":\"batchStartTime\",\"type\":\"long\"},{\"name\":\"batchNumFound\",\"type\":\"int\"},{\"name\":\"batchSentCount\",\"type\":\"int\"},{\"name\":\"batchDroppedCount\",\"type\":\"int\"},{\"name\":\"batchErrorCount\",\"type\":\"int\"},{\"name\":\"batchUnknownCodeCount\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence state;
  @Deprecated public int batchSize;
  @Deprecated public int batchIntervalMS;
  @Deprecated public java.lang.CharSequence runId;
  @Deprecated public java.lang.CharSequence stage;
  @Deprecated public long stageNumToProcess;
  @Deprecated public long stageStartTime;
  @Deprecated public long stageEndTime;
  @Deprecated public int stageProcessedCount;
  @Deprecated public int stageSentCount;
  @Deprecated public int stageDroppedCount;
  @Deprecated public int stageErrorCount;
  @Deprecated public int stageUnknownCodeCount;
  @Deprecated public java.lang.CharSequence cursor;
  @Deprecated public long batchStartTime;
  @Deprecated public int batchNumFound;
  @Deprecated public int batchSentCount;
  @Deprecated public int batchDroppedCount;
  @Deprecated public int batchErrorCount;
  @Deprecated public int batchUnknownCodeCount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public HistoricalReplayStatistics() {}

  /**
   * All-args constructor.
   */
  public HistoricalReplayStatistics(java.lang.CharSequence state, java.lang.Integer batchSize, java.lang.Integer batchIntervalMS, java.lang.CharSequence runId, java.lang.CharSequence stage, java.lang.Long stageNumToProcess, java.lang.Long stageStartTime, java.lang.Long stageEndTime, java.lang.Integer stageProcessedCount, java.lang.Integer stageSentCount, java.lang.Integer stageDroppedCount, java.lang.Integer stageErrorCount, java.lang.Integer stageUnknownCodeCount, java.lang.CharSequence cursor, java.lang.Long batchStartTime, java.lang.Integer batchNumFound, java.lang.Integer batchSentCount, java.lang.Integer batchDroppedCount, java.lang.Integer batchErrorCount, java.lang.Integer batchUnknownCodeCount) {
    this.state = state;
    this.batchSize = batchSize;
    this.batchIntervalMS = batchIntervalMS;
    this.runId = runId;
    this.stage = stage;
    this.stageNumToProcess = stageNumToProcess;
    this.stageStartTime = stageStartTime;
    this.stageEndTime = stageEndTime;
    this.stageProcessedCount = stageProcessedCount;
    this.stageSentCount = stageSentCount;
    this.stageDroppedCount = stageDroppedCount;
    this.stageErrorCount = stageErrorCount;
    this.stageUnknownCodeCount = stageUnknownCodeCount;
    this.cursor = cursor;
    this.batchStartTime = batchStartTime;
    this.batchNumFound = batchNumFound;
    this.batchSentCount = batchSentCount;
    this.batchDroppedCount = batchDroppedCount;
    this.batchErrorCount = batchErrorCount;
    this.batchUnknownCodeCount = batchUnknownCodeCount;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return state;
    case 1: return batchSize;
    case 2: return batchIntervalMS;
    case 3: return runId;
    case 4: return stage;
    case 5: return stageNumToProcess;
    case 6: return stageStartTime;
    case 7: return stageEndTime;
    case 8: return stageProcessedCount;
    case 9: return stageSentCount;
    case 10: return stageDroppedCount;
    case 11: return stageErrorCount;
    case 12: return stageUnknownCodeCount;
    case 13: return cursor;
    case 14: return batchStartTime;
    case 15: return batchNumFound;
    case 16: return batchSentCount;
    case 17: return batchDroppedCount;
    case 18: return batchErrorCount;
    case 19: return batchUnknownCodeCount;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: state = (java.lang.CharSequence)value$; break;
    case 1: batchSize = (java.lang.Integer)value$; break;
    case 2: batchIntervalMS = (java.lang.Integer)value$; break;
    case 3: runId = (java.lang.CharSequence)value$; break;
    case 4: stage = (java.lang.CharSequence)value$; break;
    case 5: stageNumToProcess = (java.lang.Long)value$; break;
    case 6: stageStartTime = (java.lang.Long)value$; break;
    case 7: stageEndTime = (java.lang.Long)value$; break;
    case 8: stageProcessedCount = (java.lang.Integer)value$; break;
    case 9: stageSentCount = (java.lang.Integer)value$; break;
    case 10: stageDroppedCount = (java.lang.Integer)value$; break;
    case 11: stageErrorCount = (java.lang.Integer)value$; break;
    case 12: stageUnknownCodeCount = (java.lang.Integer)value$; break;
    case 13: cursor = (java.lang.CharSequence)value$; break;
    case 14: batchStartTime = (java.lang.Long)value$; break;
    case 15: batchNumFound = (java.lang.Integer)value$; break;
    case 16: batchSentCount = (java.lang.Integer)value$; break;
    case 17: batchDroppedCount = (java.lang.Integer)value$; break;
    case 18: batchErrorCount = (java.lang.Integer)value$; break;
    case 19: batchUnknownCodeCount = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'state' field.
   */
  public java.lang.CharSequence getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.CharSequence value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'batchSize' field.
   */
  public java.lang.Integer getBatchSize() {
    return batchSize;
  }

  /**
   * Sets the value of the 'batchSize' field.
   * @param value the value to set.
   */
  public void setBatchSize(java.lang.Integer value) {
    this.batchSize = value;
  }

  /**
   * Gets the value of the 'batchIntervalMS' field.
   */
  public java.lang.Integer getBatchIntervalMS() {
    return batchIntervalMS;
  }

  /**
   * Sets the value of the 'batchIntervalMS' field.
   * @param value the value to set.
   */
  public void setBatchIntervalMS(java.lang.Integer value) {
    this.batchIntervalMS = value;
  }

  /**
   * Gets the value of the 'runId' field.
   */
  public java.lang.CharSequence getRunId() {
    return runId;
  }

  /**
   * Sets the value of the 'runId' field.
   * @param value the value to set.
   */
  public void setRunId(java.lang.CharSequence value) {
    this.runId = value;
  }

  /**
   * Gets the value of the 'stage' field.
   */
  public java.lang.CharSequence getStage() {
    return stage;
  }

  /**
   * Sets the value of the 'stage' field.
   * @param value the value to set.
   */
  public void setStage(java.lang.CharSequence value) {
    this.stage = value;
  }

  /**
   * Gets the value of the 'stageNumToProcess' field.
   */
  public java.lang.Long getStageNumToProcess() {
    return stageNumToProcess;
  }

  /**
   * Sets the value of the 'stageNumToProcess' field.
   * @param value the value to set.
   */
  public void setStageNumToProcess(java.lang.Long value) {
    this.stageNumToProcess = value;
  }

  /**
   * Gets the value of the 'stageStartTime' field.
   */
  public java.lang.Long getStageStartTime() {
    return stageStartTime;
  }

  /**
   * Sets the value of the 'stageStartTime' field.
   * @param value the value to set.
   */
  public void setStageStartTime(java.lang.Long value) {
    this.stageStartTime = value;
  }

  /**
   * Gets the value of the 'stageEndTime' field.
   */
  public java.lang.Long getStageEndTime() {
    return stageEndTime;
  }

  /**
   * Sets the value of the 'stageEndTime' field.
   * @param value the value to set.
   */
  public void setStageEndTime(java.lang.Long value) {
    this.stageEndTime = value;
  }

  /**
   * Gets the value of the 'stageProcessedCount' field.
   */
  public java.lang.Integer getStageProcessedCount() {
    return stageProcessedCount;
  }

  /**
   * Sets the value of the 'stageProcessedCount' field.
   * @param value the value to set.
   */
  public void setStageProcessedCount(java.lang.Integer value) {
    this.stageProcessedCount = value;
  }

  /**
   * Gets the value of the 'stageSentCount' field.
   */
  public java.lang.Integer getStageSentCount() {
    return stageSentCount;
  }

  /**
   * Sets the value of the 'stageSentCount' field.
   * @param value the value to set.
   */
  public void setStageSentCount(java.lang.Integer value) {
    this.stageSentCount = value;
  }

  /**
   * Gets the value of the 'stageDroppedCount' field.
   */
  public java.lang.Integer getStageDroppedCount() {
    return stageDroppedCount;
  }

  /**
   * Sets the value of the 'stageDroppedCount' field.
   * @param value the value to set.
   */
  public void setStageDroppedCount(java.lang.Integer value) {
    this.stageDroppedCount = value;
  }

  /**
   * Gets the value of the 'stageErrorCount' field.
   */
  public java.lang.Integer getStageErrorCount() {
    return stageErrorCount;
  }

  /**
   * Sets the value of the 'stageErrorCount' field.
   * @param value the value to set.
   */
  public void setStageErrorCount(java.lang.Integer value) {
    this.stageErrorCount = value;
  }

  /**
   * Gets the value of the 'stageUnknownCodeCount' field.
   */
  public java.lang.Integer getStageUnknownCodeCount() {
    return stageUnknownCodeCount;
  }

  /**
   * Sets the value of the 'stageUnknownCodeCount' field.
   * @param value the value to set.
   */
  public void setStageUnknownCodeCount(java.lang.Integer value) {
    this.stageUnknownCodeCount = value;
  }

  /**
   * Gets the value of the 'cursor' field.
   */
  public java.lang.CharSequence getCursor() {
    return cursor;
  }

  /**
   * Sets the value of the 'cursor' field.
   * @param value the value to set.
   */
  public void setCursor(java.lang.CharSequence value) {
    this.cursor = value;
  }

  /**
   * Gets the value of the 'batchStartTime' field.
   */
  public java.lang.Long getBatchStartTime() {
    return batchStartTime;
  }

  /**
   * Sets the value of the 'batchStartTime' field.
   * @param value the value to set.
   */
  public void setBatchStartTime(java.lang.Long value) {
    this.batchStartTime = value;
  }

  /**
   * Gets the value of the 'batchNumFound' field.
   */
  public java.lang.Integer getBatchNumFound() {
    return batchNumFound;
  }

  /**
   * Sets the value of the 'batchNumFound' field.
   * @param value the value to set.
   */
  public void setBatchNumFound(java.lang.Integer value) {
    this.batchNumFound = value;
  }

  /**
   * Gets the value of the 'batchSentCount' field.
   */
  public java.lang.Integer getBatchSentCount() {
    return batchSentCount;
  }

  /**
   * Sets the value of the 'batchSentCount' field.
   * @param value the value to set.
   */
  public void setBatchSentCount(java.lang.Integer value) {
    this.batchSentCount = value;
  }

  /**
   * Gets the value of the 'batchDroppedCount' field.
   */
  public java.lang.Integer getBatchDroppedCount() {
    return batchDroppedCount;
  }

  /**
   * Sets the value of the 'batchDroppedCount' field.
   * @param value the value to set.
   */
  public void setBatchDroppedCount(java.lang.Integer value) {
    this.batchDroppedCount = value;
  }

  /**
   * Gets the value of the 'batchErrorCount' field.
   */
  public java.lang.Integer getBatchErrorCount() {
    return batchErrorCount;
  }

  /**
   * Sets the value of the 'batchErrorCount' field.
   * @param value the value to set.
   */
  public void setBatchErrorCount(java.lang.Integer value) {
    this.batchErrorCount = value;
  }

  /**
   * Gets the value of the 'batchUnknownCodeCount' field.
   */
  public java.lang.Integer getBatchUnknownCodeCount() {
    return batchUnknownCodeCount;
  }

  /**
   * Sets the value of the 'batchUnknownCodeCount' field.
   * @param value the value to set.
   */
  public void setBatchUnknownCodeCount(java.lang.Integer value) {
    this.batchUnknownCodeCount = value;
  }

  /**
   * Creates a new HistoricalReplayStatistics RecordBuilder.
   * @return A new HistoricalReplayStatistics RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder newBuilder() {
    return new com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder();
  }
  
  /**
   * Creates a new HistoricalReplayStatistics RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new HistoricalReplayStatistics RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder newBuilder(com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder other) {
    return new com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder(other);
  }
  
  /**
   * Creates a new HistoricalReplayStatistics RecordBuilder by copying an existing HistoricalReplayStatistics instance.
   * @param other The existing instance to copy.
   * @return A new HistoricalReplayStatistics RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder newBuilder(com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics other) {
    return new com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder(other);
  }
  
  /**
   * RecordBuilder for HistoricalReplayStatistics instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HistoricalReplayStatistics>
    implements org.apache.avro.data.RecordBuilder<HistoricalReplayStatistics> {

    private java.lang.CharSequence state;
    private int batchSize;
    private int batchIntervalMS;
    private java.lang.CharSequence runId;
    private java.lang.CharSequence stage;
    private long stageNumToProcess;
    private long stageStartTime;
    private long stageEndTime;
    private int stageProcessedCount;
    private int stageSentCount;
    private int stageDroppedCount;
    private int stageErrorCount;
    private int stageUnknownCodeCount;
    private java.lang.CharSequence cursor;
    private long batchStartTime;
    private int batchNumFound;
    private int batchSentCount;
    private int batchDroppedCount;
    private int batchErrorCount;
    private int batchUnknownCodeCount;

    /** Creates a new Builder */
    private Builder() {
      super(com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.state)) {
        this.state = data().deepCopy(fields()[0].schema(), other.state);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.batchSize)) {
        this.batchSize = data().deepCopy(fields()[1].schema(), other.batchSize);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.batchIntervalMS)) {
        this.batchIntervalMS = data().deepCopy(fields()[2].schema(), other.batchIntervalMS);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.runId)) {
        this.runId = data().deepCopy(fields()[3].schema(), other.runId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stage)) {
        this.stage = data().deepCopy(fields()[4].schema(), other.stage);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.stageNumToProcess)) {
        this.stageNumToProcess = data().deepCopy(fields()[5].schema(), other.stageNumToProcess);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stageStartTime)) {
        this.stageStartTime = data().deepCopy(fields()[6].schema(), other.stageStartTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.stageEndTime)) {
        this.stageEndTime = data().deepCopy(fields()[7].schema(), other.stageEndTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.stageProcessedCount)) {
        this.stageProcessedCount = data().deepCopy(fields()[8].schema(), other.stageProcessedCount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.stageSentCount)) {
        this.stageSentCount = data().deepCopy(fields()[9].schema(), other.stageSentCount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.stageDroppedCount)) {
        this.stageDroppedCount = data().deepCopy(fields()[10].schema(), other.stageDroppedCount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.stageErrorCount)) {
        this.stageErrorCount = data().deepCopy(fields()[11].schema(), other.stageErrorCount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.stageUnknownCodeCount)) {
        this.stageUnknownCodeCount = data().deepCopy(fields()[12].schema(), other.stageUnknownCodeCount);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.cursor)) {
        this.cursor = data().deepCopy(fields()[13].schema(), other.cursor);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.batchStartTime)) {
        this.batchStartTime = data().deepCopy(fields()[14].schema(), other.batchStartTime);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.batchNumFound)) {
        this.batchNumFound = data().deepCopy(fields()[15].schema(), other.batchNumFound);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.batchSentCount)) {
        this.batchSentCount = data().deepCopy(fields()[16].schema(), other.batchSentCount);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.batchDroppedCount)) {
        this.batchDroppedCount = data().deepCopy(fields()[17].schema(), other.batchDroppedCount);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.batchErrorCount)) {
        this.batchErrorCount = data().deepCopy(fields()[18].schema(), other.batchErrorCount);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.batchUnknownCodeCount)) {
        this.batchUnknownCodeCount = data().deepCopy(fields()[19].schema(), other.batchUnknownCodeCount);
        fieldSetFlags()[19] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing HistoricalReplayStatistics instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics other) {
            super(com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.SCHEMA$);
      if (isValidValue(fields()[0], other.state)) {
        this.state = data().deepCopy(fields()[0].schema(), other.state);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.batchSize)) {
        this.batchSize = data().deepCopy(fields()[1].schema(), other.batchSize);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.batchIntervalMS)) {
        this.batchIntervalMS = data().deepCopy(fields()[2].schema(), other.batchIntervalMS);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.runId)) {
        this.runId = data().deepCopy(fields()[3].schema(), other.runId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stage)) {
        this.stage = data().deepCopy(fields()[4].schema(), other.stage);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.stageNumToProcess)) {
        this.stageNumToProcess = data().deepCopy(fields()[5].schema(), other.stageNumToProcess);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stageStartTime)) {
        this.stageStartTime = data().deepCopy(fields()[6].schema(), other.stageStartTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.stageEndTime)) {
        this.stageEndTime = data().deepCopy(fields()[7].schema(), other.stageEndTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.stageProcessedCount)) {
        this.stageProcessedCount = data().deepCopy(fields()[8].schema(), other.stageProcessedCount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.stageSentCount)) {
        this.stageSentCount = data().deepCopy(fields()[9].schema(), other.stageSentCount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.stageDroppedCount)) {
        this.stageDroppedCount = data().deepCopy(fields()[10].schema(), other.stageDroppedCount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.stageErrorCount)) {
        this.stageErrorCount = data().deepCopy(fields()[11].schema(), other.stageErrorCount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.stageUnknownCodeCount)) {
        this.stageUnknownCodeCount = data().deepCopy(fields()[12].schema(), other.stageUnknownCodeCount);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.cursor)) {
        this.cursor = data().deepCopy(fields()[13].schema(), other.cursor);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.batchStartTime)) {
        this.batchStartTime = data().deepCopy(fields()[14].schema(), other.batchStartTime);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.batchNumFound)) {
        this.batchNumFound = data().deepCopy(fields()[15].schema(), other.batchNumFound);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.batchSentCount)) {
        this.batchSentCount = data().deepCopy(fields()[16].schema(), other.batchSentCount);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.batchDroppedCount)) {
        this.batchDroppedCount = data().deepCopy(fields()[17].schema(), other.batchDroppedCount);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.batchErrorCount)) {
        this.batchErrorCount = data().deepCopy(fields()[18].schema(), other.batchErrorCount);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.batchUnknownCodeCount)) {
        this.batchUnknownCodeCount = data().deepCopy(fields()[19].schema(), other.batchUnknownCodeCount);
        fieldSetFlags()[19] = true;
      }
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.CharSequence getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setState(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.state = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearState() {
      state = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchSize' field.
      * @return The value.
      */
    public java.lang.Integer getBatchSize() {
      return batchSize;
    }

    /**
      * Sets the value of the 'batchSize' field.
      * @param value The value of 'batchSize'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setBatchSize(int value) {
      validate(fields()[1], value);
      this.batchSize = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'batchSize' field has been set.
      * @return True if the 'batchSize' field has been set, false otherwise.
      */
    public boolean hasBatchSize() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'batchSize' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearBatchSize() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchIntervalMS' field.
      * @return The value.
      */
    public java.lang.Integer getBatchIntervalMS() {
      return batchIntervalMS;
    }

    /**
      * Sets the value of the 'batchIntervalMS' field.
      * @param value The value of 'batchIntervalMS'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setBatchIntervalMS(int value) {
      validate(fields()[2], value);
      this.batchIntervalMS = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'batchIntervalMS' field has been set.
      * @return True if the 'batchIntervalMS' field has been set, false otherwise.
      */
    public boolean hasBatchIntervalMS() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'batchIntervalMS' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearBatchIntervalMS() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'runId' field.
      * @return The value.
      */
    public java.lang.CharSequence getRunId() {
      return runId;
    }

    /**
      * Sets the value of the 'runId' field.
      * @param value The value of 'runId'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setRunId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.runId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'runId' field has been set.
      * @return True if the 'runId' field has been set, false otherwise.
      */
    public boolean hasRunId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'runId' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearRunId() {
      runId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'stage' field.
      * @return The value.
      */
    public java.lang.CharSequence getStage() {
      return stage;
    }

    /**
      * Sets the value of the 'stage' field.
      * @param value The value of 'stage'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStage(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.stage = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'stage' field has been set.
      * @return True if the 'stage' field has been set, false otherwise.
      */
    public boolean hasStage() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'stage' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStage() {
      stage = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageNumToProcess' field.
      * @return The value.
      */
    public java.lang.Long getStageNumToProcess() {
      return stageNumToProcess;
    }

    /**
      * Sets the value of the 'stageNumToProcess' field.
      * @param value The value of 'stageNumToProcess'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStageNumToProcess(long value) {
      validate(fields()[5], value);
      this.stageNumToProcess = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'stageNumToProcess' field has been set.
      * @return True if the 'stageNumToProcess' field has been set, false otherwise.
      */
    public boolean hasStageNumToProcess() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'stageNumToProcess' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStageNumToProcess() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageStartTime' field.
      * @return The value.
      */
    public java.lang.Long getStageStartTime() {
      return stageStartTime;
    }

    /**
      * Sets the value of the 'stageStartTime' field.
      * @param value The value of 'stageStartTime'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStageStartTime(long value) {
      validate(fields()[6], value);
      this.stageStartTime = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'stageStartTime' field has been set.
      * @return True if the 'stageStartTime' field has been set, false otherwise.
      */
    public boolean hasStageStartTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'stageStartTime' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStageStartTime() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageEndTime' field.
      * @return The value.
      */
    public java.lang.Long getStageEndTime() {
      return stageEndTime;
    }

    /**
      * Sets the value of the 'stageEndTime' field.
      * @param value The value of 'stageEndTime'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStageEndTime(long value) {
      validate(fields()[7], value);
      this.stageEndTime = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'stageEndTime' field has been set.
      * @return True if the 'stageEndTime' field has been set, false otherwise.
      */
    public boolean hasStageEndTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'stageEndTime' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStageEndTime() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageProcessedCount' field.
      * @return The value.
      */
    public java.lang.Integer getStageProcessedCount() {
      return stageProcessedCount;
    }

    /**
      * Sets the value of the 'stageProcessedCount' field.
      * @param value The value of 'stageProcessedCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStageProcessedCount(int value) {
      validate(fields()[8], value);
      this.stageProcessedCount = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'stageProcessedCount' field has been set.
      * @return True if the 'stageProcessedCount' field has been set, false otherwise.
      */
    public boolean hasStageProcessedCount() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'stageProcessedCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStageProcessedCount() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageSentCount' field.
      * @return The value.
      */
    public java.lang.Integer getStageSentCount() {
      return stageSentCount;
    }

    /**
      * Sets the value of the 'stageSentCount' field.
      * @param value The value of 'stageSentCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStageSentCount(int value) {
      validate(fields()[9], value);
      this.stageSentCount = value;
      fieldSetFlags()[9] = true;
      return this; 
    }

    /**
      * Checks whether the 'stageSentCount' field has been set.
      * @return True if the 'stageSentCount' field has been set, false otherwise.
      */
    public boolean hasStageSentCount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'stageSentCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStageSentCount() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageDroppedCount' field.
      * @return The value.
      */
    public java.lang.Integer getStageDroppedCount() {
      return stageDroppedCount;
    }

    /**
      * Sets the value of the 'stageDroppedCount' field.
      * @param value The value of 'stageDroppedCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStageDroppedCount(int value) {
      validate(fields()[10], value);
      this.stageDroppedCount = value;
      fieldSetFlags()[10] = true;
      return this; 
    }

    /**
      * Checks whether the 'stageDroppedCount' field has been set.
      * @return True if the 'stageDroppedCount' field has been set, false otherwise.
      */
    public boolean hasStageDroppedCount() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'stageDroppedCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStageDroppedCount() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageErrorCount' field.
      * @return The value.
      */
    public java.lang.Integer getStageErrorCount() {
      return stageErrorCount;
    }

    /**
      * Sets the value of the 'stageErrorCount' field.
      * @param value The value of 'stageErrorCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStageErrorCount(int value) {
      validate(fields()[11], value);
      this.stageErrorCount = value;
      fieldSetFlags()[11] = true;
      return this; 
    }

    /**
      * Checks whether the 'stageErrorCount' field has been set.
      * @return True if the 'stageErrorCount' field has been set, false otherwise.
      */
    public boolean hasStageErrorCount() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'stageErrorCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStageErrorCount() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageUnknownCodeCount' field.
      * @return The value.
      */
    public java.lang.Integer getStageUnknownCodeCount() {
      return stageUnknownCodeCount;
    }

    /**
      * Sets the value of the 'stageUnknownCodeCount' field.
      * @param value The value of 'stageUnknownCodeCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setStageUnknownCodeCount(int value) {
      validate(fields()[12], value);
      this.stageUnknownCodeCount = value;
      fieldSetFlags()[12] = true;
      return this; 
    }

    /**
      * Checks whether the 'stageUnknownCodeCount' field has been set.
      * @return True if the 'stageUnknownCodeCount' field has been set, false otherwise.
      */
    public boolean hasStageUnknownCodeCount() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'stageUnknownCodeCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearStageUnknownCodeCount() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'cursor' field.
      * @return The value.
      */
    public java.lang.CharSequence getCursor() {
      return cursor;
    }

    /**
      * Sets the value of the 'cursor' field.
      * @param value The value of 'cursor'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setCursor(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.cursor = value;
      fieldSetFlags()[13] = true;
      return this; 
    }

    /**
      * Checks whether the 'cursor' field has been set.
      * @return True if the 'cursor' field has been set, false otherwise.
      */
    public boolean hasCursor() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'cursor' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearCursor() {
      cursor = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchStartTime' field.
      * @return The value.
      */
    public java.lang.Long getBatchStartTime() {
      return batchStartTime;
    }

    /**
      * Sets the value of the 'batchStartTime' field.
      * @param value The value of 'batchStartTime'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setBatchStartTime(long value) {
      validate(fields()[14], value);
      this.batchStartTime = value;
      fieldSetFlags()[14] = true;
      return this; 
    }

    /**
      * Checks whether the 'batchStartTime' field has been set.
      * @return True if the 'batchStartTime' field has been set, false otherwise.
      */
    public boolean hasBatchStartTime() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'batchStartTime' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearBatchStartTime() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchNumFound' field.
      * @return The value.
      */
    public java.lang.Integer getBatchNumFound() {
      return batchNumFound;
    }

    /**
      * Sets the value of the 'batchNumFound' field.
      * @param value The value of 'batchNumFound'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setBatchNumFound(int value) {
      validate(fields()[15], value);
      this.batchNumFound = value;
      fieldSetFlags()[15] = true;
      return this; 
    }

    /**
      * Checks whether the 'batchNumFound' field has been set.
      * @return True if the 'batchNumFound' field has been set, false otherwise.
      */
    public boolean hasBatchNumFound() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'batchNumFound' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearBatchNumFound() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchSentCount' field.
      * @return The value.
      */
    public java.lang.Integer getBatchSentCount() {
      return batchSentCount;
    }

    /**
      * Sets the value of the 'batchSentCount' field.
      * @param value The value of 'batchSentCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setBatchSentCount(int value) {
      validate(fields()[16], value);
      this.batchSentCount = value;
      fieldSetFlags()[16] = true;
      return this; 
    }

    /**
      * Checks whether the 'batchSentCount' field has been set.
      * @return True if the 'batchSentCount' field has been set, false otherwise.
      */
    public boolean hasBatchSentCount() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'batchSentCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearBatchSentCount() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchDroppedCount' field.
      * @return The value.
      */
    public java.lang.Integer getBatchDroppedCount() {
      return batchDroppedCount;
    }

    /**
      * Sets the value of the 'batchDroppedCount' field.
      * @param value The value of 'batchDroppedCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setBatchDroppedCount(int value) {
      validate(fields()[17], value);
      this.batchDroppedCount = value;
      fieldSetFlags()[17] = true;
      return this; 
    }

    /**
      * Checks whether the 'batchDroppedCount' field has been set.
      * @return True if the 'batchDroppedCount' field has been set, false otherwise.
      */
    public boolean hasBatchDroppedCount() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'batchDroppedCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearBatchDroppedCount() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchErrorCount' field.
      * @return The value.
      */
    public java.lang.Integer getBatchErrorCount() {
      return batchErrorCount;
    }

    /**
      * Sets the value of the 'batchErrorCount' field.
      * @param value The value of 'batchErrorCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setBatchErrorCount(int value) {
      validate(fields()[18], value);
      this.batchErrorCount = value;
      fieldSetFlags()[18] = true;
      return this; 
    }

    /**
      * Checks whether the 'batchErrorCount' field has been set.
      * @return True if the 'batchErrorCount' field has been set, false otherwise.
      */
    public boolean hasBatchErrorCount() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'batchErrorCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearBatchErrorCount() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'batchUnknownCodeCount' field.
      * @return The value.
      */
    public java.lang.Integer getBatchUnknownCodeCount() {
      return batchUnknownCodeCount;
    }

    /**
      * Sets the value of the 'batchUnknownCodeCount' field.
      * @param value The value of 'batchUnknownCodeCount'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder setBatchUnknownCodeCount(int value) {
      validate(fields()[19], value);
      this.batchUnknownCodeCount = value;
      fieldSetFlags()[19] = true;
      return this; 
    }

    /**
      * Checks whether the 'batchUnknownCodeCount' field has been set.
      * @return True if the 'batchUnknownCodeCount' field has been set, false otherwise.
      */
    public boolean hasBatchUnknownCodeCount() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'batchUnknownCodeCount' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.HistoricalReplayStatistics.Builder clearBatchUnknownCodeCount() {
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    public HistoricalReplayStatistics build() {
      try {
        HistoricalReplayStatistics record = new HistoricalReplayStatistics();
        record.state = fieldSetFlags()[0] ? this.state : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.batchSize = fieldSetFlags()[1] ? this.batchSize : (java.lang.Integer) defaultValue(fields()[1]);
        record.batchIntervalMS = fieldSetFlags()[2] ? this.batchIntervalMS : (java.lang.Integer) defaultValue(fields()[2]);
        record.runId = fieldSetFlags()[3] ? this.runId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.stage = fieldSetFlags()[4] ? this.stage : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.stageNumToProcess = fieldSetFlags()[5] ? this.stageNumToProcess : (java.lang.Long) defaultValue(fields()[5]);
        record.stageStartTime = fieldSetFlags()[6] ? this.stageStartTime : (java.lang.Long) defaultValue(fields()[6]);
        record.stageEndTime = fieldSetFlags()[7] ? this.stageEndTime : (java.lang.Long) defaultValue(fields()[7]);
        record.stageProcessedCount = fieldSetFlags()[8] ? this.stageProcessedCount : (java.lang.Integer) defaultValue(fields()[8]);
        record.stageSentCount = fieldSetFlags()[9] ? this.stageSentCount : (java.lang.Integer) defaultValue(fields()[9]);
        record.stageDroppedCount = fieldSetFlags()[10] ? this.stageDroppedCount : (java.lang.Integer) defaultValue(fields()[10]);
        record.stageErrorCount = fieldSetFlags()[11] ? this.stageErrorCount : (java.lang.Integer) defaultValue(fields()[11]);
        record.stageUnknownCodeCount = fieldSetFlags()[12] ? this.stageUnknownCodeCount : (java.lang.Integer) defaultValue(fields()[12]);
        record.cursor = fieldSetFlags()[13] ? this.cursor : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.batchStartTime = fieldSetFlags()[14] ? this.batchStartTime : (java.lang.Long) defaultValue(fields()[14]);
        record.batchNumFound = fieldSetFlags()[15] ? this.batchNumFound : (java.lang.Integer) defaultValue(fields()[15]);
        record.batchSentCount = fieldSetFlags()[16] ? this.batchSentCount : (java.lang.Integer) defaultValue(fields()[16]);
        record.batchDroppedCount = fieldSetFlags()[17] ? this.batchDroppedCount : (java.lang.Integer) defaultValue(fields()[17]);
        record.batchErrorCount = fieldSetFlags()[18] ? this.batchErrorCount : (java.lang.Integer) defaultValue(fields()[18]);
        record.batchUnknownCodeCount = fieldSetFlags()[19] ? this.batchUnknownCodeCount : (java.lang.Integer) defaultValue(fields()[19]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
