/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.jivesoftware.community.cloudalytics.schemata;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Actor extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6778992652044681764L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Actor\",\"namespace\":\"com.jivesoftware.community.cloudalytics.schemata\",\"fields\":[{\"name\":\"class\",\"type\":{\"type\":\"string\",\"order\":\"ignore\"}},{\"name\":\"objectType\",\"type\":\"string\"},{\"name\":\"objectId\",\"type\":\"long\"},{\"name\":\"objectHash\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"isDataAvailable\",\"type\":\"boolean\"},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"extras\",\"type\":{\"type\":\"map\",\"values\":[\"string\",\"boolean\",\"long\"]}},{\"name\":\"profile\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"email\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"creationDate\",\"type\":\"long\"},{\"name\":\"modificationDate\",\"type\":\"long\"},{\"name\":\"enabled\",\"type\":\"boolean\"},{\"name\":\"lastLoggedIn\",\"type\":\"long\"},{\"name\":\"lastProfileUpdate\",\"type\":\"long\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"federated\",\"type\":\"boolean\"},{\"name\":\"visible\",\"type\":\"boolean\"},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"order\":\"ignore\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence class$;
  @Deprecated public java.lang.CharSequence objectType;
  @Deprecated public long objectId;
  @Deprecated public java.lang.CharSequence objectHash;
  @Deprecated public boolean isDataAvailable;
  @Deprecated public java.util.List<java.lang.CharSequence> tags;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Object> extras;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> profile;
  @Deprecated public java.lang.CharSequence username;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence firstName;
  @Deprecated public java.lang.CharSequence lastName;
  @Deprecated public java.lang.CharSequence email;
  @Deprecated public long creationDate;
  @Deprecated public long modificationDate;
  @Deprecated public boolean enabled;
  @Deprecated public long lastLoggedIn;
  @Deprecated public long lastProfileUpdate;
  @Deprecated public java.lang.CharSequence type;
  @Deprecated public boolean federated;
  @Deprecated public boolean visible;
  @Deprecated public java.lang.CharSequence status;
  @Deprecated public java.lang.CharSequence url;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Actor() {}

  /**
   * All-args constructor.
   */
  public Actor(java.lang.CharSequence class$, java.lang.CharSequence objectType, java.lang.Long objectId, java.lang.CharSequence objectHash, java.lang.Boolean isDataAvailable, java.util.List<java.lang.CharSequence> tags, java.util.Map<java.lang.CharSequence,java.lang.Object> extras, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> profile, java.lang.CharSequence username, java.lang.CharSequence name, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence email, java.lang.Long creationDate, java.lang.Long modificationDate, java.lang.Boolean enabled, java.lang.Long lastLoggedIn, java.lang.Long lastProfileUpdate, java.lang.CharSequence type, java.lang.Boolean federated, java.lang.Boolean visible, java.lang.CharSequence status, java.lang.CharSequence url) {
    this.class$ = class$;
    this.objectType = objectType;
    this.objectId = objectId;
    this.objectHash = objectHash;
    this.isDataAvailable = isDataAvailable;
    this.tags = tags;
    this.extras = extras;
    this.profile = profile;
    this.username = username;
    this.name = name;
    this.firstName = firstName;
    this.lastName = lastName;
    this.email = email;
    this.creationDate = creationDate;
    this.modificationDate = modificationDate;
    this.enabled = enabled;
    this.lastLoggedIn = lastLoggedIn;
    this.lastProfileUpdate = lastProfileUpdate;
    this.type = type;
    this.federated = federated;
    this.visible = visible;
    this.status = status;
    this.url = url;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return class$;
    case 1: return objectType;
    case 2: return objectId;
    case 3: return objectHash;
    case 4: return isDataAvailable;
    case 5: return tags;
    case 6: return extras;
    case 7: return profile;
    case 8: return username;
    case 9: return name;
    case 10: return firstName;
    case 11: return lastName;
    case 12: return email;
    case 13: return creationDate;
    case 14: return modificationDate;
    case 15: return enabled;
    case 16: return lastLoggedIn;
    case 17: return lastProfileUpdate;
    case 18: return type;
    case 19: return federated;
    case 20: return visible;
    case 21: return status;
    case 22: return url;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: class$ = (java.lang.CharSequence)value$; break;
    case 1: objectType = (java.lang.CharSequence)value$; break;
    case 2: objectId = (java.lang.Long)value$; break;
    case 3: objectHash = (java.lang.CharSequence)value$; break;
    case 4: isDataAvailable = (java.lang.Boolean)value$; break;
    case 5: tags = (java.util.List<java.lang.CharSequence>)value$; break;
    case 6: extras = (java.util.Map<java.lang.CharSequence,java.lang.Object>)value$; break;
    case 7: profile = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 8: username = (java.lang.CharSequence)value$; break;
    case 9: name = (java.lang.CharSequence)value$; break;
    case 10: firstName = (java.lang.CharSequence)value$; break;
    case 11: lastName = (java.lang.CharSequence)value$; break;
    case 12: email = (java.lang.CharSequence)value$; break;
    case 13: creationDate = (java.lang.Long)value$; break;
    case 14: modificationDate = (java.lang.Long)value$; break;
    case 15: enabled = (java.lang.Boolean)value$; break;
    case 16: lastLoggedIn = (java.lang.Long)value$; break;
    case 17: lastProfileUpdate = (java.lang.Long)value$; break;
    case 18: type = (java.lang.CharSequence)value$; break;
    case 19: federated = (java.lang.Boolean)value$; break;
    case 20: visible = (java.lang.Boolean)value$; break;
    case 21: status = (java.lang.CharSequence)value$; break;
    case 22: url = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'class$' field.
   */
  public java.lang.CharSequence getClass$() {
    return class$;
  }

  /**
   * Sets the value of the 'class$' field.
   * @param value the value to set.
   */
  public void setClass$(java.lang.CharSequence value) {
    this.class$ = value;
  }

  /**
   * Gets the value of the 'objectType' field.
   */
  public java.lang.CharSequence getObjectType() {
    return objectType;
  }

  /**
   * Sets the value of the 'objectType' field.
   * @param value the value to set.
   */
  public void setObjectType(java.lang.CharSequence value) {
    this.objectType = value;
  }

  /**
   * Gets the value of the 'objectId' field.
   */
  public java.lang.Long getObjectId() {
    return objectId;
  }

  /**
   * Sets the value of the 'objectId' field.
   * @param value the value to set.
   */
  public void setObjectId(java.lang.Long value) {
    this.objectId = value;
  }

  /**
   * Gets the value of the 'objectHash' field.
   */
  public java.lang.CharSequence getObjectHash() {
    return objectHash;
  }

  /**
   * Sets the value of the 'objectHash' field.
   * @param value the value to set.
   */
  public void setObjectHash(java.lang.CharSequence value) {
    this.objectHash = value;
  }

  /**
   * Gets the value of the 'isDataAvailable' field.
   */
  public java.lang.Boolean getIsDataAvailable() {
    return isDataAvailable;
  }

  /**
   * Sets the value of the 'isDataAvailable' field.
   * @param value the value to set.
   */
  public void setIsDataAvailable(java.lang.Boolean value) {
    this.isDataAvailable = value;
  }

  /**
   * Gets the value of the 'tags' field.
   */
  public java.util.List<java.lang.CharSequence> getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(java.util.List<java.lang.CharSequence> value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'extras' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Object> getExtras() {
    return extras;
  }

  /**
   * Sets the value of the 'extras' field.
   * @param value the value to set.
   */
  public void setExtras(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
    this.extras = value;
  }

  /**
   * Gets the value of the 'profile' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getProfile() {
    return profile;
  }

  /**
   * Sets the value of the 'profile' field.
   * @param value the value to set.
   */
  public void setProfile(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.profile = value;
  }

  /**
   * Gets the value of the 'username' field.
   */
  public java.lang.CharSequence getUsername() {
    return username;
  }

  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.CharSequence value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'creationDate' field.
   */
  public java.lang.Long getCreationDate() {
    return creationDate;
  }

  /**
   * Sets the value of the 'creationDate' field.
   * @param value the value to set.
   */
  public void setCreationDate(java.lang.Long value) {
    this.creationDate = value;
  }

  /**
   * Gets the value of the 'modificationDate' field.
   */
  public java.lang.Long getModificationDate() {
    return modificationDate;
  }

  /**
   * Sets the value of the 'modificationDate' field.
   * @param value the value to set.
   */
  public void setModificationDate(java.lang.Long value) {
    this.modificationDate = value;
  }

  /**
   * Gets the value of the 'enabled' field.
   */
  public java.lang.Boolean getEnabled() {
    return enabled;
  }

  /**
   * Sets the value of the 'enabled' field.
   * @param value the value to set.
   */
  public void setEnabled(java.lang.Boolean value) {
    this.enabled = value;
  }

  /**
   * Gets the value of the 'lastLoggedIn' field.
   */
  public java.lang.Long getLastLoggedIn() {
    return lastLoggedIn;
  }

  /**
   * Sets the value of the 'lastLoggedIn' field.
   * @param value the value to set.
   */
  public void setLastLoggedIn(java.lang.Long value) {
    this.lastLoggedIn = value;
  }

  /**
   * Gets the value of the 'lastProfileUpdate' field.
   */
  public java.lang.Long getLastProfileUpdate() {
    return lastProfileUpdate;
  }

  /**
   * Sets the value of the 'lastProfileUpdate' field.
   * @param value the value to set.
   */
  public void setLastProfileUpdate(java.lang.Long value) {
    this.lastProfileUpdate = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'federated' field.
   */
  public java.lang.Boolean getFederated() {
    return federated;
  }

  /**
   * Sets the value of the 'federated' field.
   * @param value the value to set.
   */
  public void setFederated(java.lang.Boolean value) {
    this.federated = value;
  }

  /**
   * Gets the value of the 'visible' field.
   */
  public java.lang.Boolean getVisible() {
    return visible;
  }

  /**
   * Sets the value of the 'visible' field.
   * @param value the value to set.
   */
  public void setVisible(java.lang.Boolean value) {
    this.visible = value;
  }

  /**
   * Gets the value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'url' field.
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /**
   * Creates a new Actor RecordBuilder.
   * @return A new Actor RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.schemata.Actor.Builder newBuilder() {
    return new com.jivesoftware.community.cloudalytics.schemata.Actor.Builder();
  }
  
  /**
   * Creates a new Actor RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Actor RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.schemata.Actor.Builder newBuilder(com.jivesoftware.community.cloudalytics.schemata.Actor.Builder other) {
    return new com.jivesoftware.community.cloudalytics.schemata.Actor.Builder(other);
  }
  
  /**
   * Creates a new Actor RecordBuilder by copying an existing Actor instance.
   * @param other The existing instance to copy.
   * @return A new Actor RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.schemata.Actor.Builder newBuilder(com.jivesoftware.community.cloudalytics.schemata.Actor other) {
    return new com.jivesoftware.community.cloudalytics.schemata.Actor.Builder(other);
  }
  
  /**
   * RecordBuilder for Actor instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Actor>
    implements org.apache.avro.data.RecordBuilder<Actor> {

    private java.lang.CharSequence class$;
    private java.lang.CharSequence objectType;
    private long objectId;
    private java.lang.CharSequence objectHash;
    private boolean isDataAvailable;
    private java.util.List<java.lang.CharSequence> tags;
    private java.util.Map<java.lang.CharSequence,java.lang.Object> extras;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> profile;
    private java.lang.CharSequence username;
    private java.lang.CharSequence name;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence email;
    private long creationDate;
    private long modificationDate;
    private boolean enabled;
    private long lastLoggedIn;
    private long lastProfileUpdate;
    private java.lang.CharSequence type;
    private boolean federated;
    private boolean visible;
    private java.lang.CharSequence status;
    private java.lang.CharSequence url;

    /** Creates a new Builder */
    private Builder() {
      super(com.jivesoftware.community.cloudalytics.schemata.Actor.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.schemata.Actor.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.class$)) {
        this.class$ = data().deepCopy(fields()[0].schema(), other.class$);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.objectType)) {
        this.objectType = data().deepCopy(fields()[1].schema(), other.objectType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.objectId)) {
        this.objectId = data().deepCopy(fields()[2].schema(), other.objectId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.objectHash)) {
        this.objectHash = data().deepCopy(fields()[3].schema(), other.objectHash);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isDataAvailable)) {
        this.isDataAvailable = data().deepCopy(fields()[4].schema(), other.isDataAvailable);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tags)) {
        this.tags = data().deepCopy(fields()[5].schema(), other.tags);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.extras)) {
        this.extras = data().deepCopy(fields()[6].schema(), other.extras);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.profile)) {
        this.profile = data().deepCopy(fields()[7].schema(), other.profile);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.username)) {
        this.username = data().deepCopy(fields()[8].schema(), other.username);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.name)) {
        this.name = data().deepCopy(fields()[9].schema(), other.name);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.firstName)) {
        this.firstName = data().deepCopy(fields()[10].schema(), other.firstName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastName)) {
        this.lastName = data().deepCopy(fields()[11].schema(), other.lastName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.email)) {
        this.email = data().deepCopy(fields()[12].schema(), other.email);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[13].schema(), other.creationDate);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.modificationDate)) {
        this.modificationDate = data().deepCopy(fields()[14].schema(), other.modificationDate);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.enabled)) {
        this.enabled = data().deepCopy(fields()[15].schema(), other.enabled);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lastLoggedIn)) {
        this.lastLoggedIn = data().deepCopy(fields()[16].schema(), other.lastLoggedIn);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lastProfileUpdate)) {
        this.lastProfileUpdate = data().deepCopy(fields()[17].schema(), other.lastProfileUpdate);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.type)) {
        this.type = data().deepCopy(fields()[18].schema(), other.type);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.federated)) {
        this.federated = data().deepCopy(fields()[19].schema(), other.federated);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.visible)) {
        this.visible = data().deepCopy(fields()[20].schema(), other.visible);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.status)) {
        this.status = data().deepCopy(fields()[21].schema(), other.status);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.url)) {
        this.url = data().deepCopy(fields()[22].schema(), other.url);
        fieldSetFlags()[22] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing Actor instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.schemata.Actor other) {
            super(com.jivesoftware.community.cloudalytics.schemata.Actor.SCHEMA$);
      if (isValidValue(fields()[0], other.class$)) {
        this.class$ = data().deepCopy(fields()[0].schema(), other.class$);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.objectType)) {
        this.objectType = data().deepCopy(fields()[1].schema(), other.objectType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.objectId)) {
        this.objectId = data().deepCopy(fields()[2].schema(), other.objectId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.objectHash)) {
        this.objectHash = data().deepCopy(fields()[3].schema(), other.objectHash);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isDataAvailable)) {
        this.isDataAvailable = data().deepCopy(fields()[4].schema(), other.isDataAvailable);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tags)) {
        this.tags = data().deepCopy(fields()[5].schema(), other.tags);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.extras)) {
        this.extras = data().deepCopy(fields()[6].schema(), other.extras);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.profile)) {
        this.profile = data().deepCopy(fields()[7].schema(), other.profile);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.username)) {
        this.username = data().deepCopy(fields()[8].schema(), other.username);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.name)) {
        this.name = data().deepCopy(fields()[9].schema(), other.name);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.firstName)) {
        this.firstName = data().deepCopy(fields()[10].schema(), other.firstName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastName)) {
        this.lastName = data().deepCopy(fields()[11].schema(), other.lastName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.email)) {
        this.email = data().deepCopy(fields()[12].schema(), other.email);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[13].schema(), other.creationDate);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.modificationDate)) {
        this.modificationDate = data().deepCopy(fields()[14].schema(), other.modificationDate);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.enabled)) {
        this.enabled = data().deepCopy(fields()[15].schema(), other.enabled);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lastLoggedIn)) {
        this.lastLoggedIn = data().deepCopy(fields()[16].schema(), other.lastLoggedIn);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lastProfileUpdate)) {
        this.lastProfileUpdate = data().deepCopy(fields()[17].schema(), other.lastProfileUpdate);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.type)) {
        this.type = data().deepCopy(fields()[18].schema(), other.type);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.federated)) {
        this.federated = data().deepCopy(fields()[19].schema(), other.federated);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.visible)) {
        this.visible = data().deepCopy(fields()[20].schema(), other.visible);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.status)) {
        this.status = data().deepCopy(fields()[21].schema(), other.status);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.url)) {
        this.url = data().deepCopy(fields()[22].schema(), other.url);
        fieldSetFlags()[22] = true;
      }
    }

    /**
      * Gets the value of the 'class$' field.
      * @return The value.
      */
    public java.lang.CharSequence getClass$() {
      return class$;
    }

    /**
      * Sets the value of the 'class$' field.
      * @param value The value of 'class$'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setClass$(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.class$ = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'class$' field has been set.
      * @return True if the 'class$' field has been set, false otherwise.
      */
    public boolean hasClass$() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'class$' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearClass$() {
      class$ = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'objectType' field.
      * @return The value.
      */
    public java.lang.CharSequence getObjectType() {
      return objectType;
    }

    /**
      * Sets the value of the 'objectType' field.
      * @param value The value of 'objectType'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setObjectType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.objectType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'objectType' field has been set.
      * @return True if the 'objectType' field has been set, false otherwise.
      */
    public boolean hasObjectType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'objectType' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearObjectType() {
      objectType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'objectId' field.
      * @return The value.
      */
    public java.lang.Long getObjectId() {
      return objectId;
    }

    /**
      * Sets the value of the 'objectId' field.
      * @param value The value of 'objectId'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setObjectId(long value) {
      validate(fields()[2], value);
      this.objectId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'objectId' field has been set.
      * @return True if the 'objectId' field has been set, false otherwise.
      */
    public boolean hasObjectId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'objectId' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearObjectId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'objectHash' field.
      * @return The value.
      */
    public java.lang.CharSequence getObjectHash() {
      return objectHash;
    }

    /**
      * Sets the value of the 'objectHash' field.
      * @param value The value of 'objectHash'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setObjectHash(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.objectHash = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'objectHash' field has been set.
      * @return True if the 'objectHash' field has been set, false otherwise.
      */
    public boolean hasObjectHash() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'objectHash' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearObjectHash() {
      objectHash = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'isDataAvailable' field.
      * @return The value.
      */
    public java.lang.Boolean getIsDataAvailable() {
      return isDataAvailable;
    }

    /**
      * Sets the value of the 'isDataAvailable' field.
      * @param value The value of 'isDataAvailable'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setIsDataAvailable(boolean value) {
      validate(fields()[4], value);
      this.isDataAvailable = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'isDataAvailable' field has been set.
      * @return True if the 'isDataAvailable' field has been set, false otherwise.
      */
    public boolean hasIsDataAvailable() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'isDataAvailable' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearIsDataAvailable() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setTags(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[5], value);
      this.tags = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearTags() {
      tags = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'extras' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.Object> getExtras() {
      return extras;
    }

    /**
      * Sets the value of the 'extras' field.
      * @param value The value of 'extras'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setExtras(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
      validate(fields()[6], value);
      this.extras = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'extras' field has been set.
      * @return True if the 'extras' field has been set, false otherwise.
      */
    public boolean hasExtras() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'extras' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearExtras() {
      extras = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getProfile() {
      return profile;
    }

    /**
      * Sets the value of the 'profile' field.
      * @param value The value of 'profile'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setProfile(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.profile = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'profile' field has been set.
      * @return True if the 'profile' field has been set, false otherwise.
      */
    public boolean hasProfile() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'profile' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearProfile() {
      profile = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'username' field.
      * @return The value.
      */
    public java.lang.CharSequence getUsername() {
      return username;
    }

    /**
      * Sets the value of the 'username' field.
      * @param value The value of 'username'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setUsername(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.username = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'username' field has been set.
      * @return True if the 'username' field has been set, false otherwise.
      */
    public boolean hasUsername() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'username' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearUsername() {
      username = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setName(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.name = value;
      fieldSetFlags()[9] = true;
      return this; 
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearName() {
      name = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }

    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.firstName = value;
      fieldSetFlags()[10] = true;
      return this; 
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }

    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.lastName = value;
      fieldSetFlags()[11] = true;
      return this; 
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.email = value;
      fieldSetFlags()[12] = true;
      return this; 
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearEmail() {
      email = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'creationDate' field.
      * @return The value.
      */
    public java.lang.Long getCreationDate() {
      return creationDate;
    }

    /**
      * Sets the value of the 'creationDate' field.
      * @param value The value of 'creationDate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setCreationDate(long value) {
      validate(fields()[13], value);
      this.creationDate = value;
      fieldSetFlags()[13] = true;
      return this; 
    }

    /**
      * Checks whether the 'creationDate' field has been set.
      * @return True if the 'creationDate' field has been set, false otherwise.
      */
    public boolean hasCreationDate() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'creationDate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearCreationDate() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'modificationDate' field.
      * @return The value.
      */
    public java.lang.Long getModificationDate() {
      return modificationDate;
    }

    /**
      * Sets the value of the 'modificationDate' field.
      * @param value The value of 'modificationDate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setModificationDate(long value) {
      validate(fields()[14], value);
      this.modificationDate = value;
      fieldSetFlags()[14] = true;
      return this; 
    }

    /**
      * Checks whether the 'modificationDate' field has been set.
      * @return True if the 'modificationDate' field has been set, false otherwise.
      */
    public boolean hasModificationDate() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'modificationDate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearModificationDate() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'enabled' field.
      * @return The value.
      */
    public java.lang.Boolean getEnabled() {
      return enabled;
    }

    /**
      * Sets the value of the 'enabled' field.
      * @param value The value of 'enabled'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setEnabled(boolean value) {
      validate(fields()[15], value);
      this.enabled = value;
      fieldSetFlags()[15] = true;
      return this; 
    }

    /**
      * Checks whether the 'enabled' field has been set.
      * @return True if the 'enabled' field has been set, false otherwise.
      */
    public boolean hasEnabled() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'enabled' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearEnabled() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastLoggedIn' field.
      * @return The value.
      */
    public java.lang.Long getLastLoggedIn() {
      return lastLoggedIn;
    }

    /**
      * Sets the value of the 'lastLoggedIn' field.
      * @param value The value of 'lastLoggedIn'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setLastLoggedIn(long value) {
      validate(fields()[16], value);
      this.lastLoggedIn = value;
      fieldSetFlags()[16] = true;
      return this; 
    }

    /**
      * Checks whether the 'lastLoggedIn' field has been set.
      * @return True if the 'lastLoggedIn' field has been set, false otherwise.
      */
    public boolean hasLastLoggedIn() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'lastLoggedIn' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearLastLoggedIn() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastProfileUpdate' field.
      * @return The value.
      */
    public java.lang.Long getLastProfileUpdate() {
      return lastProfileUpdate;
    }

    /**
      * Sets the value of the 'lastProfileUpdate' field.
      * @param value The value of 'lastProfileUpdate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setLastProfileUpdate(long value) {
      validate(fields()[17], value);
      this.lastProfileUpdate = value;
      fieldSetFlags()[17] = true;
      return this; 
    }

    /**
      * Checks whether the 'lastProfileUpdate' field has been set.
      * @return True if the 'lastProfileUpdate' field has been set, false otherwise.
      */
    public boolean hasLastProfileUpdate() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'lastProfileUpdate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearLastProfileUpdate() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setType(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.type = value;
      fieldSetFlags()[18] = true;
      return this; 
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearType() {
      type = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'federated' field.
      * @return The value.
      */
    public java.lang.Boolean getFederated() {
      return federated;
    }

    /**
      * Sets the value of the 'federated' field.
      * @param value The value of 'federated'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setFederated(boolean value) {
      validate(fields()[19], value);
      this.federated = value;
      fieldSetFlags()[19] = true;
      return this; 
    }

    /**
      * Checks whether the 'federated' field has been set.
      * @return True if the 'federated' field has been set, false otherwise.
      */
    public boolean hasFederated() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'federated' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearFederated() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'visible' field.
      * @return The value.
      */
    public java.lang.Boolean getVisible() {
      return visible;
    }

    /**
      * Sets the value of the 'visible' field.
      * @param value The value of 'visible'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setVisible(boolean value) {
      validate(fields()[20], value);
      this.visible = value;
      fieldSetFlags()[20] = true;
      return this; 
    }

    /**
      * Checks whether the 'visible' field has been set.
      * @return True if the 'visible' field has been set, false otherwise.
      */
    public boolean hasVisible() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'visible' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearVisible() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.status = value;
      fieldSetFlags()[21] = true;
      return this; 
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearStatus() {
      status = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public java.lang.CharSequence getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.url = value;
      fieldSetFlags()[22] = true;
      return this; 
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.schemata.Actor.Builder clearUrl() {
      url = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    @Override
    public Actor build() {
      try {
        Actor record = new Actor();
        record.class$ = fieldSetFlags()[0] ? this.class$ : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.objectType = fieldSetFlags()[1] ? this.objectType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.objectId = fieldSetFlags()[2] ? this.objectId : (java.lang.Long) defaultValue(fields()[2]);
        record.objectHash = fieldSetFlags()[3] ? this.objectHash : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.isDataAvailable = fieldSetFlags()[4] ? this.isDataAvailable : (java.lang.Boolean) defaultValue(fields()[4]);
        record.tags = fieldSetFlags()[5] ? this.tags : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[5]);
        record.extras = fieldSetFlags()[6] ? this.extras : (java.util.Map<java.lang.CharSequence,java.lang.Object>) defaultValue(fields()[6]);
        record.profile = fieldSetFlags()[7] ? this.profile : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[7]);
        record.username = fieldSetFlags()[8] ? this.username : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.name = fieldSetFlags()[9] ? this.name : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.firstName = fieldSetFlags()[10] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.lastName = fieldSetFlags()[11] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.email = fieldSetFlags()[12] ? this.email : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.creationDate = fieldSetFlags()[13] ? this.creationDate : (java.lang.Long) defaultValue(fields()[13]);
        record.modificationDate = fieldSetFlags()[14] ? this.modificationDate : (java.lang.Long) defaultValue(fields()[14]);
        record.enabled = fieldSetFlags()[15] ? this.enabled : (java.lang.Boolean) defaultValue(fields()[15]);
        record.lastLoggedIn = fieldSetFlags()[16] ? this.lastLoggedIn : (java.lang.Long) defaultValue(fields()[16]);
        record.lastProfileUpdate = fieldSetFlags()[17] ? this.lastProfileUpdate : (java.lang.Long) defaultValue(fields()[17]);
        record.type = fieldSetFlags()[18] ? this.type : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.federated = fieldSetFlags()[19] ? this.federated : (java.lang.Boolean) defaultValue(fields()[19]);
        record.visible = fieldSetFlags()[20] ? this.visible : (java.lang.Boolean) defaultValue(fields()[20]);
        record.status = fieldSetFlags()[21] ? this.status : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.url = fieldSetFlags()[22] ? this.url : (java.lang.CharSequence) defaultValue(fields()[22]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
