/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.jivesoftware.community.cloudalytics.event.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroSecurityGroup extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8091966708120721425L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroSecurityGroup\",\"namespace\":\"com.jivesoftware.community.cloudalytics.event.avro\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"order\":\"ignore\"}},{\"name\":\"creationDate\",\"type\":\"long\"},{\"name\":\"modificationDate\",\"type\":\"long\"},{\"name\":\"federated\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public long creationDate;
  @Deprecated public long modificationDate;
  @Deprecated public boolean federated;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AvroSecurityGroup() {}

  /**
   * All-args constructor.
   */
  public AvroSecurityGroup(java.lang.CharSequence name, java.lang.Long creationDate, java.lang.Long modificationDate, java.lang.Boolean federated) {
    this.name = name;
    this.creationDate = creationDate;
    this.modificationDate = modificationDate;
    this.federated = federated;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return creationDate;
    case 2: return modificationDate;
    case 3: return federated;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: creationDate = (java.lang.Long)value$; break;
    case 2: modificationDate = (java.lang.Long)value$; break;
    case 3: federated = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'creationDate' field.
   */
  public java.lang.Long getCreationDate() {
    return creationDate;
  }

  /**
   * Sets the value of the 'creationDate' field.
   * @param value the value to set.
   */
  public void setCreationDate(java.lang.Long value) {
    this.creationDate = value;
  }

  /**
   * Gets the value of the 'modificationDate' field.
   */
  public java.lang.Long getModificationDate() {
    return modificationDate;
  }

  /**
   * Sets the value of the 'modificationDate' field.
   * @param value the value to set.
   */
  public void setModificationDate(java.lang.Long value) {
    this.modificationDate = value;
  }

  /**
   * Gets the value of the 'federated' field.
   */
  public java.lang.Boolean getFederated() {
    return federated;
  }

  /**
   * Sets the value of the 'federated' field.
   * @param value the value to set.
   */
  public void setFederated(java.lang.Boolean value) {
    this.federated = value;
  }

  /**
   * Creates a new AvroSecurityGroup RecordBuilder.
   * @return A new AvroSecurityGroup RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder newBuilder() {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder();
  }
  
  /**
   * Creates a new AvroSecurityGroup RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroSecurityGroup RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder newBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder other) {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder(other);
  }
  
  /**
   * Creates a new AvroSecurityGroup RecordBuilder by copying an existing AvroSecurityGroup instance.
   * @param other The existing instance to copy.
   * @return A new AvroSecurityGroup RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder newBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup other) {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder(other);
  }
  
  /**
   * RecordBuilder for AvroSecurityGroup instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroSecurityGroup>
    implements org.apache.avro.data.RecordBuilder<AvroSecurityGroup> {

    private java.lang.CharSequence name;
    private long creationDate;
    private long modificationDate;
    private boolean federated;

    /** Creates a new Builder */
    private Builder() {
      super(com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[1].schema(), other.creationDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.modificationDate)) {
        this.modificationDate = data().deepCopy(fields()[2].schema(), other.modificationDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.federated)) {
        this.federated = data().deepCopy(fields()[3].schema(), other.federated);
        fieldSetFlags()[3] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing AvroSecurityGroup instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup other) {
            super(com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[1].schema(), other.creationDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.modificationDate)) {
        this.modificationDate = data().deepCopy(fields()[2].schema(), other.modificationDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.federated)) {
        this.federated = data().deepCopy(fields()[3].schema(), other.federated);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'creationDate' field.
      * @return The value.
      */
    public java.lang.Long getCreationDate() {
      return creationDate;
    }

    /**
      * Sets the value of the 'creationDate' field.
      * @param value The value of 'creationDate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder setCreationDate(long value) {
      validate(fields()[1], value);
      this.creationDate = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'creationDate' field has been set.
      * @return True if the 'creationDate' field has been set, false otherwise.
      */
    public boolean hasCreationDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'creationDate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder clearCreationDate() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'modificationDate' field.
      * @return The value.
      */
    public java.lang.Long getModificationDate() {
      return modificationDate;
    }

    /**
      * Sets the value of the 'modificationDate' field.
      * @param value The value of 'modificationDate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder setModificationDate(long value) {
      validate(fields()[2], value);
      this.modificationDate = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'modificationDate' field has been set.
      * @return True if the 'modificationDate' field has been set, false otherwise.
      */
    public boolean hasModificationDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'modificationDate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder clearModificationDate() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'federated' field.
      * @return The value.
      */
    public java.lang.Boolean getFederated() {
      return federated;
    }

    /**
      * Sets the value of the 'federated' field.
      * @param value The value of 'federated'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder setFederated(boolean value) {
      validate(fields()[3], value);
      this.federated = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'federated' field has been set.
      * @return True if the 'federated' field has been set, false otherwise.
      */
    public boolean hasFederated() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'federated' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSecurityGroup.Builder clearFederated() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public AvroSecurityGroup build() {
      try {
        AvroSecurityGroup record = new AvroSecurityGroup();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.creationDate = fieldSetFlags()[1] ? this.creationDate : (java.lang.Long) defaultValue(fields()[1]);
        record.modificationDate = fieldSetFlags()[2] ? this.modificationDate : (java.lang.Long) defaultValue(fields()[2]);
        record.federated = fieldSetFlags()[3] ? this.federated : (java.lang.Boolean) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
