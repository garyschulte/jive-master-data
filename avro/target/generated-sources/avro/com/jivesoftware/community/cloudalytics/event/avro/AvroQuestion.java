/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.jivesoftware.community.cloudalytics.event.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroQuestion extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4356988004988028580L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroQuestion\",\"namespace\":\"com.jivesoftware.community.cloudalytics.event.avro\",\"fields\":[{\"name\":\"isQuestion\",\"type\":[\"boolean\"],\"default\":true},{\"name\":\"questionStatus\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"resolved\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"assumedResolved\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"open\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"questionCreateDate\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"resolutionDate\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"numHelpfulAnswers\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"numReplies\",\"type\":[\"null\",\"int\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Object isQuestion;
  @Deprecated public java.lang.CharSequence questionStatus;
  @Deprecated public java.lang.Boolean resolved;
  @Deprecated public java.lang.Boolean assumedResolved;
  @Deprecated public java.lang.Boolean open;
  @Deprecated public java.lang.Long questionCreateDate;
  @Deprecated public java.lang.Long resolutionDate;
  @Deprecated public java.lang.Integer numHelpfulAnswers;
  @Deprecated public java.lang.Integer numReplies;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AvroQuestion() {}

  /**
   * All-args constructor.
   */
  public AvroQuestion(java.lang.Object isQuestion, java.lang.CharSequence questionStatus, java.lang.Boolean resolved, java.lang.Boolean assumedResolved, java.lang.Boolean open, java.lang.Long questionCreateDate, java.lang.Long resolutionDate, java.lang.Integer numHelpfulAnswers, java.lang.Integer numReplies) {
    this.isQuestion = isQuestion;
    this.questionStatus = questionStatus;
    this.resolved = resolved;
    this.assumedResolved = assumedResolved;
    this.open = open;
    this.questionCreateDate = questionCreateDate;
    this.resolutionDate = resolutionDate;
    this.numHelpfulAnswers = numHelpfulAnswers;
    this.numReplies = numReplies;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return isQuestion;
    case 1: return questionStatus;
    case 2: return resolved;
    case 3: return assumedResolved;
    case 4: return open;
    case 5: return questionCreateDate;
    case 6: return resolutionDate;
    case 7: return numHelpfulAnswers;
    case 8: return numReplies;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: isQuestion = (java.lang.Object)value$; break;
    case 1: questionStatus = (java.lang.CharSequence)value$; break;
    case 2: resolved = (java.lang.Boolean)value$; break;
    case 3: assumedResolved = (java.lang.Boolean)value$; break;
    case 4: open = (java.lang.Boolean)value$; break;
    case 5: questionCreateDate = (java.lang.Long)value$; break;
    case 6: resolutionDate = (java.lang.Long)value$; break;
    case 7: numHelpfulAnswers = (java.lang.Integer)value$; break;
    case 8: numReplies = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'isQuestion' field.
   */
  public java.lang.Object getIsQuestion() {
    return isQuestion;
  }

  /**
   * Sets the value of the 'isQuestion' field.
   * @param value the value to set.
   */
  public void setIsQuestion(java.lang.Object value) {
    this.isQuestion = value;
  }

  /**
   * Gets the value of the 'questionStatus' field.
   */
  public java.lang.CharSequence getQuestionStatus() {
    return questionStatus;
  }

  /**
   * Sets the value of the 'questionStatus' field.
   * @param value the value to set.
   */
  public void setQuestionStatus(java.lang.CharSequence value) {
    this.questionStatus = value;
  }

  /**
   * Gets the value of the 'resolved' field.
   */
  public java.lang.Boolean getResolved() {
    return resolved;
  }

  /**
   * Sets the value of the 'resolved' field.
   * @param value the value to set.
   */
  public void setResolved(java.lang.Boolean value) {
    this.resolved = value;
  }

  /**
   * Gets the value of the 'assumedResolved' field.
   */
  public java.lang.Boolean getAssumedResolved() {
    return assumedResolved;
  }

  /**
   * Sets the value of the 'assumedResolved' field.
   * @param value the value to set.
   */
  public void setAssumedResolved(java.lang.Boolean value) {
    this.assumedResolved = value;
  }

  /**
   * Gets the value of the 'open' field.
   */
  public java.lang.Boolean getOpen() {
    return open;
  }

  /**
   * Sets the value of the 'open' field.
   * @param value the value to set.
   */
  public void setOpen(java.lang.Boolean value) {
    this.open = value;
  }

  /**
   * Gets the value of the 'questionCreateDate' field.
   */
  public java.lang.Long getQuestionCreateDate() {
    return questionCreateDate;
  }

  /**
   * Sets the value of the 'questionCreateDate' field.
   * @param value the value to set.
   */
  public void setQuestionCreateDate(java.lang.Long value) {
    this.questionCreateDate = value;
  }

  /**
   * Gets the value of the 'resolutionDate' field.
   */
  public java.lang.Long getResolutionDate() {
    return resolutionDate;
  }

  /**
   * Sets the value of the 'resolutionDate' field.
   * @param value the value to set.
   */
  public void setResolutionDate(java.lang.Long value) {
    this.resolutionDate = value;
  }

  /**
   * Gets the value of the 'numHelpfulAnswers' field.
   */
  public java.lang.Integer getNumHelpfulAnswers() {
    return numHelpfulAnswers;
  }

  /**
   * Sets the value of the 'numHelpfulAnswers' field.
   * @param value the value to set.
   */
  public void setNumHelpfulAnswers(java.lang.Integer value) {
    this.numHelpfulAnswers = value;
  }

  /**
   * Gets the value of the 'numReplies' field.
   */
  public java.lang.Integer getNumReplies() {
    return numReplies;
  }

  /**
   * Sets the value of the 'numReplies' field.
   * @param value the value to set.
   */
  public void setNumReplies(java.lang.Integer value) {
    this.numReplies = value;
  }

  /**
   * Creates a new AvroQuestion RecordBuilder.
   * @return A new AvroQuestion RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder newBuilder() {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder();
  }
  
  /**
   * Creates a new AvroQuestion RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroQuestion RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder newBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder other) {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder(other);
  }
  
  /**
   * Creates a new AvroQuestion RecordBuilder by copying an existing AvroQuestion instance.
   * @param other The existing instance to copy.
   * @return A new AvroQuestion RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder newBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion other) {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder(other);
  }
  
  /**
   * RecordBuilder for AvroQuestion instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroQuestion>
    implements org.apache.avro.data.RecordBuilder<AvroQuestion> {

    private java.lang.Object isQuestion;
    private java.lang.CharSequence questionStatus;
    private java.lang.Boolean resolved;
    private java.lang.Boolean assumedResolved;
    private java.lang.Boolean open;
    private java.lang.Long questionCreateDate;
    private java.lang.Long resolutionDate;
    private java.lang.Integer numHelpfulAnswers;
    private java.lang.Integer numReplies;

    /** Creates a new Builder */
    private Builder() {
      super(com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.isQuestion)) {
        this.isQuestion = data().deepCopy(fields()[0].schema(), other.isQuestion);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.questionStatus)) {
        this.questionStatus = data().deepCopy(fields()[1].schema(), other.questionStatus);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resolved)) {
        this.resolved = data().deepCopy(fields()[2].schema(), other.resolved);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.assumedResolved)) {
        this.assumedResolved = data().deepCopy(fields()[3].schema(), other.assumedResolved);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.open)) {
        this.open = data().deepCopy(fields()[4].schema(), other.open);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.questionCreateDate)) {
        this.questionCreateDate = data().deepCopy(fields()[5].schema(), other.questionCreateDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.resolutionDate)) {
        this.resolutionDate = data().deepCopy(fields()[6].schema(), other.resolutionDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.numHelpfulAnswers)) {
        this.numHelpfulAnswers = data().deepCopy(fields()[7].schema(), other.numHelpfulAnswers);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.numReplies)) {
        this.numReplies = data().deepCopy(fields()[8].schema(), other.numReplies);
        fieldSetFlags()[8] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing AvroQuestion instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion other) {
            super(com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.SCHEMA$);
      if (isValidValue(fields()[0], other.isQuestion)) {
        this.isQuestion = data().deepCopy(fields()[0].schema(), other.isQuestion);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.questionStatus)) {
        this.questionStatus = data().deepCopy(fields()[1].schema(), other.questionStatus);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resolved)) {
        this.resolved = data().deepCopy(fields()[2].schema(), other.resolved);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.assumedResolved)) {
        this.assumedResolved = data().deepCopy(fields()[3].schema(), other.assumedResolved);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.open)) {
        this.open = data().deepCopy(fields()[4].schema(), other.open);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.questionCreateDate)) {
        this.questionCreateDate = data().deepCopy(fields()[5].schema(), other.questionCreateDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.resolutionDate)) {
        this.resolutionDate = data().deepCopy(fields()[6].schema(), other.resolutionDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.numHelpfulAnswers)) {
        this.numHelpfulAnswers = data().deepCopy(fields()[7].schema(), other.numHelpfulAnswers);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.numReplies)) {
        this.numReplies = data().deepCopy(fields()[8].schema(), other.numReplies);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'isQuestion' field.
      * @return The value.
      */
    public java.lang.Object getIsQuestion() {
      return isQuestion;
    }

    /**
      * Sets the value of the 'isQuestion' field.
      * @param value The value of 'isQuestion'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setIsQuestion(java.lang.Object value) {
      validate(fields()[0], value);
      this.isQuestion = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'isQuestion' field has been set.
      * @return True if the 'isQuestion' field has been set, false otherwise.
      */
    public boolean hasIsQuestion() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'isQuestion' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearIsQuestion() {
      isQuestion = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'questionStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getQuestionStatus() {
      return questionStatus;
    }

    /**
      * Sets the value of the 'questionStatus' field.
      * @param value The value of 'questionStatus'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setQuestionStatus(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.questionStatus = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'questionStatus' field has been set.
      * @return True if the 'questionStatus' field has been set, false otherwise.
      */
    public boolean hasQuestionStatus() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'questionStatus' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearQuestionStatus() {
      questionStatus = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'resolved' field.
      * @return The value.
      */
    public java.lang.Boolean getResolved() {
      return resolved;
    }

    /**
      * Sets the value of the 'resolved' field.
      * @param value The value of 'resolved'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setResolved(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.resolved = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'resolved' field has been set.
      * @return True if the 'resolved' field has been set, false otherwise.
      */
    public boolean hasResolved() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'resolved' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearResolved() {
      resolved = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'assumedResolved' field.
      * @return The value.
      */
    public java.lang.Boolean getAssumedResolved() {
      return assumedResolved;
    }

    /**
      * Sets the value of the 'assumedResolved' field.
      * @param value The value of 'assumedResolved'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setAssumedResolved(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.assumedResolved = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'assumedResolved' field has been set.
      * @return True if the 'assumedResolved' field has been set, false otherwise.
      */
    public boolean hasAssumedResolved() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'assumedResolved' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearAssumedResolved() {
      assumedResolved = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'open' field.
      * @return The value.
      */
    public java.lang.Boolean getOpen() {
      return open;
    }

    /**
      * Sets the value of the 'open' field.
      * @param value The value of 'open'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setOpen(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.open = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'open' field has been set.
      * @return True if the 'open' field has been set, false otherwise.
      */
    public boolean hasOpen() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'open' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearOpen() {
      open = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'questionCreateDate' field.
      * @return The value.
      */
    public java.lang.Long getQuestionCreateDate() {
      return questionCreateDate;
    }

    /**
      * Sets the value of the 'questionCreateDate' field.
      * @param value The value of 'questionCreateDate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setQuestionCreateDate(java.lang.Long value) {
      validate(fields()[5], value);
      this.questionCreateDate = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'questionCreateDate' field has been set.
      * @return True if the 'questionCreateDate' field has been set, false otherwise.
      */
    public boolean hasQuestionCreateDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'questionCreateDate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearQuestionCreateDate() {
      questionCreateDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'resolutionDate' field.
      * @return The value.
      */
    public java.lang.Long getResolutionDate() {
      return resolutionDate;
    }

    /**
      * Sets the value of the 'resolutionDate' field.
      * @param value The value of 'resolutionDate'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setResolutionDate(java.lang.Long value) {
      validate(fields()[6], value);
      this.resolutionDate = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'resolutionDate' field has been set.
      * @return True if the 'resolutionDate' field has been set, false otherwise.
      */
    public boolean hasResolutionDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'resolutionDate' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearResolutionDate() {
      resolutionDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'numHelpfulAnswers' field.
      * @return The value.
      */
    public java.lang.Integer getNumHelpfulAnswers() {
      return numHelpfulAnswers;
    }

    /**
      * Sets the value of the 'numHelpfulAnswers' field.
      * @param value The value of 'numHelpfulAnswers'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setNumHelpfulAnswers(java.lang.Integer value) {
      validate(fields()[7], value);
      this.numHelpfulAnswers = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'numHelpfulAnswers' field has been set.
      * @return True if the 'numHelpfulAnswers' field has been set, false otherwise.
      */
    public boolean hasNumHelpfulAnswers() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'numHelpfulAnswers' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearNumHelpfulAnswers() {
      numHelpfulAnswers = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'numReplies' field.
      * @return The value.
      */
    public java.lang.Integer getNumReplies() {
      return numReplies;
    }

    /**
      * Sets the value of the 'numReplies' field.
      * @param value The value of 'numReplies'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder setNumReplies(java.lang.Integer value) {
      validate(fields()[8], value);
      this.numReplies = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'numReplies' field has been set.
      * @return True if the 'numReplies' field has been set, false otherwise.
      */
    public boolean hasNumReplies() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'numReplies' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroQuestion.Builder clearNumReplies() {
      numReplies = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public AvroQuestion build() {
      try {
        AvroQuestion record = new AvroQuestion();
        record.isQuestion = fieldSetFlags()[0] ? this.isQuestion : (java.lang.Object) defaultValue(fields()[0]);
        record.questionStatus = fieldSetFlags()[1] ? this.questionStatus : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.resolved = fieldSetFlags()[2] ? this.resolved : (java.lang.Boolean) defaultValue(fields()[2]);
        record.assumedResolved = fieldSetFlags()[3] ? this.assumedResolved : (java.lang.Boolean) defaultValue(fields()[3]);
        record.open = fieldSetFlags()[4] ? this.open : (java.lang.Boolean) defaultValue(fields()[4]);
        record.questionCreateDate = fieldSetFlags()[5] ? this.questionCreateDate : (java.lang.Long) defaultValue(fields()[5]);
        record.resolutionDate = fieldSetFlags()[6] ? this.resolutionDate : (java.lang.Long) defaultValue(fields()[6]);
        record.numHelpfulAnswers = fieldSetFlags()[7] ? this.numHelpfulAnswers : (java.lang.Integer) defaultValue(fields()[7]);
        record.numReplies = fieldSetFlags()[8] ? this.numReplies : (java.lang.Integer) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
