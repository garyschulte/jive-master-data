/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.jivesoftware.community.cloudalytics.event.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroSearch extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8875106613690167854L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroSearch\",\"namespace\":\"com.jivesoftware.community.cloudalytics.event.avro\",\"fields\":[{\"name\":\"keywords\",\"type\":{\"type\":\"string\",\"order\":\"ignore\"}},{\"name\":\"searchSelectedId\",\"type\":\"long\"},{\"name\":\"searchSelectedType\",\"type\":\"string\"},{\"name\":\"queries\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"searchFinalQuery\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence keywords;
  @Deprecated public long searchSelectedId;
  @Deprecated public java.lang.CharSequence searchSelectedType;
  @Deprecated public java.util.List<java.lang.CharSequence> queries;
  @Deprecated public java.lang.CharSequence searchFinalQuery;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AvroSearch() {}

  /**
   * All-args constructor.
   */
  public AvroSearch(java.lang.CharSequence keywords, java.lang.Long searchSelectedId, java.lang.CharSequence searchSelectedType, java.util.List<java.lang.CharSequence> queries, java.lang.CharSequence searchFinalQuery) {
    this.keywords = keywords;
    this.searchSelectedId = searchSelectedId;
    this.searchSelectedType = searchSelectedType;
    this.queries = queries;
    this.searchFinalQuery = searchFinalQuery;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return keywords;
    case 1: return searchSelectedId;
    case 2: return searchSelectedType;
    case 3: return queries;
    case 4: return searchFinalQuery;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: keywords = (java.lang.CharSequence)value$; break;
    case 1: searchSelectedId = (java.lang.Long)value$; break;
    case 2: searchSelectedType = (java.lang.CharSequence)value$; break;
    case 3: queries = (java.util.List<java.lang.CharSequence>)value$; break;
    case 4: searchFinalQuery = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'keywords' field.
   */
  public java.lang.CharSequence getKeywords() {
    return keywords;
  }

  /**
   * Sets the value of the 'keywords' field.
   * @param value the value to set.
   */
  public void setKeywords(java.lang.CharSequence value) {
    this.keywords = value;
  }

  /**
   * Gets the value of the 'searchSelectedId' field.
   */
  public java.lang.Long getSearchSelectedId() {
    return searchSelectedId;
  }

  /**
   * Sets the value of the 'searchSelectedId' field.
   * @param value the value to set.
   */
  public void setSearchSelectedId(java.lang.Long value) {
    this.searchSelectedId = value;
  }

  /**
   * Gets the value of the 'searchSelectedType' field.
   */
  public java.lang.CharSequence getSearchSelectedType() {
    return searchSelectedType;
  }

  /**
   * Sets the value of the 'searchSelectedType' field.
   * @param value the value to set.
   */
  public void setSearchSelectedType(java.lang.CharSequence value) {
    this.searchSelectedType = value;
  }

  /**
   * Gets the value of the 'queries' field.
   */
  public java.util.List<java.lang.CharSequence> getQueries() {
    return queries;
  }

  /**
   * Sets the value of the 'queries' field.
   * @param value the value to set.
   */
  public void setQueries(java.util.List<java.lang.CharSequence> value) {
    this.queries = value;
  }

  /**
   * Gets the value of the 'searchFinalQuery' field.
   */
  public java.lang.CharSequence getSearchFinalQuery() {
    return searchFinalQuery;
  }

  /**
   * Sets the value of the 'searchFinalQuery' field.
   * @param value the value to set.
   */
  public void setSearchFinalQuery(java.lang.CharSequence value) {
    this.searchFinalQuery = value;
  }

  /**
   * Creates a new AvroSearch RecordBuilder.
   * @return A new AvroSearch RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder newBuilder() {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder();
  }
  
  /**
   * Creates a new AvroSearch RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroSearch RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder newBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder other) {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder(other);
  }
  
  /**
   * Creates a new AvroSearch RecordBuilder by copying an existing AvroSearch instance.
   * @param other The existing instance to copy.
   * @return A new AvroSearch RecordBuilder
   */
  public static com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder newBuilder(com.jivesoftware.community.cloudalytics.event.avro.AvroSearch other) {
    return new com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder(other);
  }
  
  /**
   * RecordBuilder for AvroSearch instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroSearch>
    implements org.apache.avro.data.RecordBuilder<AvroSearch> {

    private java.lang.CharSequence keywords;
    private long searchSelectedId;
    private java.lang.CharSequence searchSelectedType;
    private java.util.List<java.lang.CharSequence> queries;
    private java.lang.CharSequence searchFinalQuery;

    /** Creates a new Builder */
    private Builder() {
      super(com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.keywords)) {
        this.keywords = data().deepCopy(fields()[0].schema(), other.keywords);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.searchSelectedId)) {
        this.searchSelectedId = data().deepCopy(fields()[1].schema(), other.searchSelectedId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.searchSelectedType)) {
        this.searchSelectedType = data().deepCopy(fields()[2].schema(), other.searchSelectedType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.queries)) {
        this.queries = data().deepCopy(fields()[3].schema(), other.queries);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.searchFinalQuery)) {
        this.searchFinalQuery = data().deepCopy(fields()[4].schema(), other.searchFinalQuery);
        fieldSetFlags()[4] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing AvroSearch instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jivesoftware.community.cloudalytics.event.avro.AvroSearch other) {
            super(com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.SCHEMA$);
      if (isValidValue(fields()[0], other.keywords)) {
        this.keywords = data().deepCopy(fields()[0].schema(), other.keywords);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.searchSelectedId)) {
        this.searchSelectedId = data().deepCopy(fields()[1].schema(), other.searchSelectedId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.searchSelectedType)) {
        this.searchSelectedType = data().deepCopy(fields()[2].schema(), other.searchSelectedType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.queries)) {
        this.queries = data().deepCopy(fields()[3].schema(), other.queries);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.searchFinalQuery)) {
        this.searchFinalQuery = data().deepCopy(fields()[4].schema(), other.searchFinalQuery);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'keywords' field.
      * @return The value.
      */
    public java.lang.CharSequence getKeywords() {
      return keywords;
    }

    /**
      * Sets the value of the 'keywords' field.
      * @param value The value of 'keywords'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder setKeywords(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.keywords = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'keywords' field has been set.
      * @return True if the 'keywords' field has been set, false otherwise.
      */
    public boolean hasKeywords() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'keywords' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder clearKeywords() {
      keywords = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchSelectedId' field.
      * @return The value.
      */
    public java.lang.Long getSearchSelectedId() {
      return searchSelectedId;
    }

    /**
      * Sets the value of the 'searchSelectedId' field.
      * @param value The value of 'searchSelectedId'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder setSearchSelectedId(long value) {
      validate(fields()[1], value);
      this.searchSelectedId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'searchSelectedId' field has been set.
      * @return True if the 'searchSelectedId' field has been set, false otherwise.
      */
    public boolean hasSearchSelectedId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'searchSelectedId' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder clearSearchSelectedId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchSelectedType' field.
      * @return The value.
      */
    public java.lang.CharSequence getSearchSelectedType() {
      return searchSelectedType;
    }

    /**
      * Sets the value of the 'searchSelectedType' field.
      * @param value The value of 'searchSelectedType'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder setSearchSelectedType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.searchSelectedType = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'searchSelectedType' field has been set.
      * @return True if the 'searchSelectedType' field has been set, false otherwise.
      */
    public boolean hasSearchSelectedType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'searchSelectedType' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder clearSearchSelectedType() {
      searchSelectedType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'queries' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getQueries() {
      return queries;
    }

    /**
      * Sets the value of the 'queries' field.
      * @param value The value of 'queries'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder setQueries(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[3], value);
      this.queries = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'queries' field has been set.
      * @return True if the 'queries' field has been set, false otherwise.
      */
    public boolean hasQueries() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'queries' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder clearQueries() {
      queries = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchFinalQuery' field.
      * @return The value.
      */
    public java.lang.CharSequence getSearchFinalQuery() {
      return searchFinalQuery;
    }

    /**
      * Sets the value of the 'searchFinalQuery' field.
      * @param value The value of 'searchFinalQuery'.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder setSearchFinalQuery(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.searchFinalQuery = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'searchFinalQuery' field has been set.
      * @return True if the 'searchFinalQuery' field has been set, false otherwise.
      */
    public boolean hasSearchFinalQuery() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'searchFinalQuery' field.
      * @return This builder.
      */
    public com.jivesoftware.community.cloudalytics.event.avro.AvroSearch.Builder clearSearchFinalQuery() {
      searchFinalQuery = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public AvroSearch build() {
      try {
        AvroSearch record = new AvroSearch();
        record.keywords = fieldSetFlags()[0] ? this.keywords : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.searchSelectedId = fieldSetFlags()[1] ? this.searchSelectedId : (java.lang.Long) defaultValue(fields()[1]);
        record.searchSelectedType = fieldSetFlags()[2] ? this.searchSelectedType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.queries = fieldSetFlags()[3] ? this.queries : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[3]);
        record.searchFinalQuery = fieldSetFlags()[4] ? this.searchFinalQuery : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
