@namespace("com.jivesoftware.community.cloudalytics.event.avro")

protocol Cloudalytics {

    record AvroActor {
        @order("ignore")

        string class;
        string objectType;
        long objectId;
        union { null, string } objectHash = null;
        boolean isDataAvailable;
        array<string> tags;
        map<union { string, boolean, long }> extras;

        map<string> profile;
        string username;
        string name;
        string firstName;
        string lastName;
        union { null, string } email = null;
        long creationDate;
        long modificationDate;

        boolean enabled;
        long lastLoggedIn;
        long lastProfileUpdate;
        string type;
        boolean federated;
        boolean visible;

        string status;
        string url;
    }

    record AvroDestination {
        @order("ignore")
        string class;
        string objectType;
        long objectId;
        string objectHash;
        string name;
        map<union {string, boolean, long}> extras;
        array<string> tags;

        string displayName;
        string description;
        string url;
        string status;
        string fullPath;
        string normalizedPath;
        string combinedObjectTypeId;
        boolean isDataAvailable;
        boolean isVisibleToPartner;
        long creationDate;
        long modificationDate;
        long parentId;
        string parentType;
    }

    record AvroActorRelation {
        @order("ignore")
        AvroActor user;
        AvroActor relatedUser;
        string status;
        string graphType;
        string relation;
        long creationDate;
        long retiredDate;
    }

    record AvroActorRelationList {
        @order("ignore")
        int size;
        string name;
    }

    record AvroAppLoad {
        @order("ignore")
        string appName;
        string appURL;
        string extensionUUID;
        boolean isSynthetic;
        string associatedObjectType;
        long associatedObjectId;
        string associatedName;
    }


    record AvroAttachment {
        @order("ignore")
        string mimeType;
        string fileName;
        int attachmentSize;
        boolean contentDataAvailable;
        long creationDate;
        long modificationDate;
    }

    record AvroExStorageFile {
        @order("ignore")
        string contentObjectType;
        long contentObjectId;
        string definitionObjectType;
        long definitionObjectId;
        string definitionName;
        string extensionUUID;
    }

    record AvroExStorageAttachment {
        @order("ignore")
        string definitionObjectType;
        long definitionObjectId;
        string definitionName;
        string extensionUUID;
    }

    record AvroExtension {
        @order("ignore")
        string extensionUUID;
        string name;
        long creationDate;
        long deployDate;
        boolean isLocal;
        string status;
        string type;
        boolean isVisibleToAll;
    }

    record AvroHistoricalReplayStatistics {
        @order("ignore")
        string state;
        int batchSize;
        int batchIntervalMS;
        string runId;
        string stage;
        long stageNumToProcess;
        long stageStartTime;
        long stageEndTime;
        int stageProcessedCount;
        int stageSentCount;
        int stageDroppedCount;
        int stageErrorCount;
        int stageUnknownCodeCount;
        string cursor;
        long batchStartTime;
        int batchNumFound;
        int batchSentCount;
        int batchDroppedCount;
        int batchErrorCount;
        int batchUnknownCodeCount;
    }

    record AvroInvitation {
        @order("ignore")
        long invitationId;
        string invterUserName;
        string inviterEmail;
        string inviteeEmail;
        string revokerUsername;
        string state;
        long sentDate;
        long revokeDate;
        long creationDate;
        long modificationDate;

    }

    record AvroPlayboxQuest {
        @order("ignore")
        string questId;
        string taskId;
        string secret;
        boolean isApiRequest;
    }

    record AvroSearch {
        @order("ignore")
        string keywords;
        long searchSelectedId;
        string searchSelectedType;
        array<string> queries;
        string searchFinalQuery;
    }

    record AvroSecurityGroup {
        @order("ignore")
        string name;
        long creationDate;
        long modificationDate;
        boolean federated;
    }

    record AvroTileInstance {
        @order("ignore")
        string tileDefinitionObjectType;
        long tileDefinitionObjectId;
        string tileDefinitionName;
        string tileDefinitionVisualType;
        boolean isActivityStream;
        string extensionUUID;
    }

    record AvroUserRewardBadge {
        @order("ignore")
        string badgeId;
        string userEmail;
        string message;
        string streamEntryId;
        string streamEntryUrl;
    }

    /******** BEGIN CONTENT ACTIVITY DEFINITIONS **********/

     record AvroComment {
         @order("ignore")
         //Comment fields
         union { null, long } parentCommentId = null;
         union { null, string } parentComment = null;

     }

    record AvroThread {
        @order("ignore")
        boolean isQuestion = false;
    }

    record AvroQuestion {
        @order("ignore")
        //  Question fields
        union { boolean } isQuestion = true;
        union { null, string } questionStatus = null;
        union { null, boolean } resolved = null;
        union { null, boolean } assumedResolved = null;
        union { null, boolean } open = null;
        union { null, long } questionCreateDate = null;
        union { null, long } resolutionDate = null;
        union { null, int } numHelpfulAnswers = null;
        union { null, int } numReplies = null;

    }

    record AvroParentTask {
        // exists to resolve circular reference between actionObject and Task and enforce type
        @order("ignore")
        string class;
        string objectType;
        long objectId;
        string objectHash;
        boolean isDataAvailable;
        array<string> tags;
        map<string> extras;
        union { null, boolean } completed = null;
        union { null, long } dueDate = null;
        union { null, AvroActor } owner = null;
        union { null, AvroParentTask } parentTask = null;
    }

    record AvroTask {
        @order("ignore")
        // task fields
        union { null, boolean } completed = null;
        union { null, long } dueDate = null;
        union { null, AvroActor } owner = null;
        union { null, AvroParentTask } parentTask = null;

    }

    record AvroWallEntry {
        @order("ignore")
        // wall entry fields
        union { null, array<long> } recipientIds = null;
        union { null, int } numRecipients = null;
        union { null, string } messageType = null;

    }


    record AvroContent {
        @order("ignore")
        //ActionContent fields
        string subject;
        long creationDate;
        long modificationDate;  // thank god for consistency.  /snark

        AvroActor author;
        long containerId;
        string containerType;
        boolean isVisibleToPartner;
        string status;
        string url;
        string fullPath;
        string normalizedPath;
        string combinedObjectTypeId;
        union { null, AvroComment, AvroQuestion, AvroThread, AvroTask, AvroWallEntry } contentElements;

    }


    /***  END CONTENT ACTIVITY DEFINITIONS ****/

    record AvroAction {
        @order("ignore")
        string class;
        string objectType;
        long objectId;
        string objectHash;
        boolean isDataAvailable;
        array<string> tags;
        map<string> extras;

        union { null, AvroActor, AvroDestination, AvroContent, AvroActorRelation, AvroActorRelationList
            , AvroAppLoad, AvroAttachment, AvroExStorageFile, AvroExStorageAttachment, AvroExtension
            , AvroHistoricalReplayStatistics, AvroInvitation, AvroPlayboxQuest, AvroSearch
            , AvroSecurityGroup, AvroTileInstance, AvroUserRewardBadge } extendedActionObject;

    }


    record AvroActivity {
        @order("ignore")

        AvroActor actor;
        string action;
        long activityTime;
        AvroAction actionObject;
        AvroDestination destination;

    }

    record AvroEvent {
        @order("ignore")

        string name;
        long timestamp;
        long seqId;
        string uuid;
        map<map<string>> context;
        map<string> payload;

        long actorId;
        int actorType;
        string activityType;
        long actionObjectId;
        int actionObjectType;
        long containerId;
        int containerType;
        AvroActivity activity;
        boolean isHistoricalReplay;
    }

}