@namespace("com.jivesoftware.community.cloudalytics.event.avro")

protocol Cloudalytics {

    record AvroActor {
        @order("ignore")

        union { null, string } class;
        string objectType;
        union { null,long } objectId;
        union { null, string } objectHash = null;
        union { null, boolean } isDataAvailable;
        array<string> tags;
        map<union { null, string, boolean, long, int, map<string>}> extras;

        map<union { null, string, long, int, boolean, map <string>}> profile;
        union { null, string } username;
        union {null, string } name;
        union { null, string } firstName;
        union { null, string } lastName;
        union { null, string } email = null;
        union { null, long } creationDate;
        union { null, long } modificationDate;

        union { null, boolean } enabled;
        union { null, long } lastLoggedIn;
        union { null, long } lastProfileUpdate;
        string type;
        union { null, boolean } federated;
        union { null, boolean } visible;

        union { null, string } status;
        union { null, string } url;
    }

    record AvroDestination {
        @order("ignore")
        string class;
        string objectType;
        union { null, long } objectId;
        union { null, string } objectHash;
        union { null, string } name;
        map<union {null, string, boolean, long, int}> extras;
        array<string> tags;

        union { null, string } displayName;
        union { null, string } description;
        union { null, string } url;
        union { null, string } status;
        union { null, string } fullPath;
        union { null, string } normalizedPath;
        union { null, string } combinedObjectTypeId;
        union { null, boolean } isDataAvailable;
        union { null, boolean } isVisibleToPartner;
		union { null, long } creationDate;
		union { null, long } modificationDate;
		union { null, long } parentId;
        union { null, string } parentType;
    }

    record AvroActorRelation {
        @order("ignore")
        union { null, AvroActor } user;
        union { null, AvroActor } relatedUser;
        union { null, string } status;
        union { null, string } graphType;
        union { null, string } relation;
		union { null, long } creationDate;
		union { null, long } retiredDate;
    }

    record AvroActorRelationList {
        @order("ignore")
		union { null, int } size;
        union { null, string } name;
    }

    record AvroAppLoad {
        @order("ignore")
        union { null, string } appName;
        union { null, string } appURL;
        union { null, string } extensionUUID;
		union { null, boolean } isSynthetic;
        union { null, string } associatedObjectType;
		union { null, long } associatedObjectId;
        union { null, string } associatedName;
    }


    record AvroAttachment {
        @order("ignore")
        union { null, string } mimeType;
        union { null, string } fileName;
		union { null, int } attachmentSize;
		union { null, boolean } contentDataAvailable;
		union { null, long } creationDate;
		union { null, long } modificationDate;
    }

    record AvroExStorageFile {
        @order("ignore")
        union { null, string } contentObjectType;
		union { null, long } contentObjectId;
        union { null, string } definitionObjectType;
		union { null, long } definitionObjectId;
        union { null, string } definitionName;
        union { null, string } extensionUUID;
    }

    record AvroExStorageAttachment {
        @order("ignore")
        union { null, string } definitionObjectType;
		union { null, long } definitionObjectId;
        union { null, string } definitionName;
        union { null, string } extensionUUID;
    }

    record AvroExtension {
        @order("ignore")
        string extensionUUID;
        union { null, string } name;
		union { null, long } creationDate;
		union { null, long } deployDate;
		union { null, boolean } isLocal;
        union { null, string } status;
        union { null, string } type;
		union { null, boolean } isVisibleToAll;
    }

    record AvroHistoricalReplayStatistics {
        @order("ignore")
        union {null, string } state;
		union { null, int } batchSize;
		union { null, int } batchIntervalMS;
        union { null, string } runId;
        union { null, string } stage;
		union { null, long } stageNumToProcess;
		union { null, long } stageStartTime;
		union { null, long } stageEndTime;
		union { null, int } stageProcessedCount;
		union { null, int } stageSentCount;
		union { null, int } stageDroppedCount;
		union { null, int } stageErrorCount;
		union { null, int } stageUnknownCodeCount;
        union { null, string } cursor;
		union { null, long } batchStartTime;
		union { null, int } batchNumFound;
		union { null, int } batchSentCount;
		union { null, int } batchDroppedCount;
		union { null, int } batchErrorCount;
		union { null, int } batchUnknownCodeCount;
    }

    record AvroInvitation {
        @order("ignore")
		union { null, long } invitationId;
        union { null, string } invterUserName;
        union { null, string } inviterEmail;
        union { null, string } inviteeEmail;
        union { null, string } revokerUsername;
        union { null, string } state;
		union { null, long } sentDate;
		union { null, long } revokeDate;
		union { null, long } creationDate;
		union { null, long } modificationDate;

    }

    record AvroPlayboxQuest {
        @order("ignore")
        union { null, string } questId;
        union { null, string } taskId;
        union { null, string } secret;
		union { null, boolean } isApiRequest;
    }

    record AvroSearch {
        @order("ignore")
        union {null, string } keywords;
		union { null, long } searchSelectedId;
        union { null, string } searchSelectedType;
        union { null, array<string> } queries;
        union { null, string } searchFinalQuery;
    }

    record AvroSecurityGroup {
        @order("ignore")
        union { null, string } name;
		union { null, long } creationDate;
		union { null, long } modificationDate;
		union { null, boolean } federated;
    }

    record AvroTileInstance {
        @order("ignore")
        union { null, string } tileDefinitionObjectType;
		union { null, long } tileDefinitionObjectId;
        union { null, string } tileDefinitionName;
        union { null, string } tileDefinitionVisualType;
		union { null, boolean } isActivityStream;
        union { null, string } extensionUUID;
    }

    record AvroUserRewardBadge {
        @order("ignore")
        union { null, string } badgeId;
        union { null, string } userEmail;
        union { null, string } message;
        union { null, string } streamEntryId;
        union { null, string } streamEntryUrl;
    }

    /******** BEGIN CONTENT ACTIVITY DEFINITIONS **********/

    record AvroParentComment {
        // flattened Comment, exists to resolve circular reference between actionObject and Comment and enforce type
        @order("ignore")
        string class;
        string objectType;
		union { null, long } objectId;
        union { null, string } objectHash;
		union { null, boolean } isDataAvailable;
        array<string> tags;
        map<string> extras;
        union { null, string } subject;
		union { null, long } creationDate;
		union { null, long } modificationDate;  // thank god for consistency.  /snark
        union { null, AvroActor } author;
        union { null, long } authorId;
		union { null, long } containerId;
        union { null, string } containerType;
		union { null, boolean } isVisibleToPartner;
        union { null, string } status;
        union { null, string } url;
        union { null, string } fullPath;
        union { null, string } normalizedPath;
        union { null, string } combinedObjectTypeId;
         //Comment fields
        union { null, long } parentCommentId = null;
        union { null, AvroParentComment } parentComment = null;
     }

     record AvroComment {
        @order("ignore")
        //Comment fields
        union { null, long } parentCommentId = null;
        union { null, AvroParentComment } parentComment = null;

     }

    record AvroThread {
        @order("ignore")
		union { null, boolean } isQuestion = false;
    }

    record AvroQuestion {
        @order("ignore")
        //  Question fields
        union { boolean } isQuestion = true;
        union { null, string } questionStatus = null;
        union { null, boolean } resolved = null;
        union { null, boolean } assumedResolved = null;
        union { null, boolean } open = null;
        union { null, long } questionCreateDate = null;
        union { null, long } resolutionDate = null;
        union { null, int } numHelpfulAnswers = null;
        union { null, int } numReplies = null;

    }

    record AvroParentTask {
        // flattened Task object, exists to resolve circular reference between actionObject and Task and enforce type
        @order("ignore")
        string class;
        string objectType;
		union { null, long } objectId;
        union { null, string } objectHash;
		union { null, boolean } isDataAvailable;
        array<string> tags;
        map<string> extras;
        string subject;
		union { null, long } creationDate;
		union { null, long } modificationDate;  // thank god for consistency.  /snark
        union { null, AvroActor } author;
        union { null, long } authorId;
		union { null, long } containerId;
        union { null, string } containerType;
		union { null, boolean } isVisibleToPartner;
        union { null, string } status;
        union { null, string } url;
        union { null, string } fullPath;
        union { null, string } normalizedPath;
        union { null, string } combinedObjectTypeId;
        union { null, boolean } completed = null;
        union { null, long } dueDate = null;
        union { null, AvroActor } owner = null;
        union { null, AvroParentTask } parentTask = null;
    }

    record AvroTask {
        @order("ignore")
        // task fields
        union { null, boolean } completed = null;
        union { null, long } dueDate = null;
        union { null, AvroActor } owner = null;
        union { null, AvroParentTask } parentTask = null;

    }

    record AvroWallEntry {
        @order("ignore")
        // wall entry fields
        union { null, array<long> } recipientIds = null;
        union { null, int } numRecipients = null;
        union { null, string } messageType = null;

    }


    record AvroContent {
        @order("ignore")
        //ActionContent fields
        union { null, string } subject;
		union { null, long } creationDate;
		union { null, long } modificationDate;

        union { null, AvroActor } author;
        union {null, long } authorId;
		union { null, long } containerId;
        union { null, string } containerType;
		union { null, boolean } isVisibleToPartner;
        union { null, string } status;
        union { null, string } url;
        union { null, string } fullPath;
        union { null, string } normalizedPath;
        union { null, string } combinedObjectTypeId;
        union { null, AvroComment, AvroQuestion, AvroThread, AvroTask, AvroWallEntry } contentElements;

    }


    /***  END CONTENT ACTIVITY DEFINITIONS ****/

    record AvroAction {
        @order("ignore")
        string class;
        union { null, string, long } objectType;
		union { null, long } objectId;
        union { null, string } objectHash;
		union { null, boolean } isDataAvailable;
        array<string> tags;
        map< union { null
                    ,string
                    ,long
                    ,boolean
                    ,int
                    ,array< union { string, long, int}>
                    ,map< union { null
                                 ,string
                                 ,long
                                 ,boolean
                                 ,int
                                 ,array< union { string, long } >
                                 ,map < union { null, string, long, boolean, int} >
                                }
                        >
                   }
           > extras;

        union { null, AvroActor, AvroDestination, AvroContent, AvroActorRelation, AvroActorRelationList
            , AvroAppLoad, AvroAttachment, AvroExStorageFile, AvroExStorageAttachment, AvroExtension
            , AvroHistoricalReplayStatistics, AvroInvitation, AvroPlayboxQuest, AvroSearch
            , AvroSecurityGroup, AvroTileInstance, AvroUserRewardBadge } extendedActionObject;

    }


    record AvroActivity {
        @order("ignore")

        AvroActor actor;
        string action;
		union { null, long } activityTime;
        union { null, AvroAction } actionObject;
        union { null, AvroDestination } destination;

    }

    record AvroEvent {
        @order("ignore")

        string name;
		union { null, long } timestamp;
		union { null, long } seqId;
        string uuid;
        map<map<string>> context;
        union { null, map<union { null, string}> } payload;
		union { null, long } actorId;
		union { null, int } actorType;
        string activityType;
		union { null, long } actionObjectId;
		union { null, int } actionObjectType;
		union { null, long } containerId;
		union { null, int } containerType;
        AvroActivity activity;
		union { null, boolean } isHistoricalReplay;
    }

}